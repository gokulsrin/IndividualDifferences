{
  "{\"sourceRoot\":\"/Users/janeacierno/IndDiff/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/janeacierno/IndDiff\",\"filename\":\"/Users/janeacierno/IndDiff/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/janeacierno/IndDiff\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/janeacierno/IndDiff",
      "filename": "/Users/janeacierno/IndDiff/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/janeacierno/IndDiff",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/janeacierno/IndDiff/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/janeacierno/IndDiff/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/janeacierno/IndDiff/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _path = _interopRequireWildcard(require(\"path\"));\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _parseData = require(\"./parseData\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar con = _mysql[\"default\"].createConnection({\n  host: process.env.HOST,\n  user: process.env.DBUSER,\n  password: process.env.PASSWORD,\n  database: process.env.DATABASE\n});\n\ncon.connect(function (err) {\n  if (err) throw err;\n  console.log(\"Connected to database!\");\n});\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"][\"static\"]('public')); // enable json message body for posting data to API\n\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json()); // default index route\n\napp.post('/data', function (req, res) {\n  // console.log(req.body)\n  var query = (0, _parseData.makeQuery)(req.body.data);\n  con.query(query, function (err, result) {\n    if (err) console.log(err);else console.log(\"Data recorded\");\n  });\n  res.send('Data received!');\n}); // START THE SERVER\n// =============================================================================\n\nvar PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(\"listening on: \".concat(PORT));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJjb24iLCJteXNxbCIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJ1c2VyIiwiREJVU0VSIiwicGFzc3dvcmQiLCJQQVNTV09SRCIsImRhdGFiYXNlIiwiREFUQUJBU0UiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFwcCIsInVzZSIsImV4cHJlc3MiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInBvc3QiLCJyZXEiLCJyZXMiLCJxdWVyeSIsImJvZHkiLCJkYXRhIiwicmVzdWx0Iiwic2VuZCIsIlBPUlQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQUEsbUJBQU9DLE1BQVA7O0FBR0EsSUFBSUMsR0FBRyxHQUFHQyxrQkFBTUMsZ0JBQU4sQ0FBdUI7QUFDN0JDLEVBQUFBLElBQUksRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBRFc7QUFFN0JDLEVBQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLE1BRlc7QUFHN0JDLEVBQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFFBSE87QUFJN0JDLEVBQUFBLFFBQVEsRUFBRVAsT0FBTyxDQUFDQyxHQUFSLENBQVlPO0FBSk8sQ0FBdkIsQ0FBVjs7QUFPRVosR0FBRyxDQUFDYSxPQUFKLENBQVksVUFBU0MsR0FBVCxFQUFjO0FBQ3hCLE1BQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0QsQ0FIRDtBQUtBLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUVGQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsOEJBQWUsUUFBZixDQUFSLEUsQ0FFQTs7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVFFLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVFFLHVCQUFXRyxJQUFYLEVBQVIsRSxDQUdBOztBQUNBTixHQUFHLENBQUNPLElBQUosQ0FBUyxPQUFULEVBQWtCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzVCO0FBRUksTUFBTUMsS0FBSyxHQUFHLDBCQUFVRixHQUFHLENBQUNHLElBQUosQ0FBU0MsSUFBbkIsQ0FBZDtBQUNBN0IsRUFBQUEsR0FBRyxDQUFDMkIsS0FBSixDQUFVQSxLQUFWLEVBQWlCLFVBQVViLEdBQVYsRUFBZWdCLE1BQWYsRUFBdUI7QUFDdEMsUUFBSWhCLEdBQUosRUFBU0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosRUFBVCxLQUNLQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ04sR0FIRDtBQUlKVSxFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxnQkFBVDtBQUNILENBVEQsRSxDQWNBO0FBQ0E7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHNUIsT0FBTyxDQUFDQyxHQUFSLENBQVkyQixJQUFaLElBQW9CLElBQWpDO0FBQ0FmLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0QsSUFBWDtBQUNBakIsT0FBTyxDQUFDQyxHQUFSLHlCQUE2QmdCLElBQTdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qYW5lYWNpZXJuby9JbmREaWZmLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgcGF0aCwgeyBwYXJzZSB9IGZyb20gJ3BhdGgnO1xuXG5pbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwnO1xuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnXG5pbXBvcnQge21ha2VRdWVyeX0gZnJvbSAnLi9wYXJzZURhdGEnXG5cbmRvdGVudi5jb25maWcoKTtcblxuXG52YXIgY29uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gICAgaG9zdDogcHJvY2Vzcy5lbnYuSE9TVCxcbiAgICB1c2VyOiBwcm9jZXNzLmVudi5EQlVTRVIsXG4gICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBBU1NXT1JELFxuICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQVRBQkFTRVxuICB9KTtcbiAgXG4gIGNvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xuICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCB0byBkYXRhYmFzZSFcIik7XG4gIH0pO1xuICBcbiAgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XG5cbi8vIGVuYWJsZSBqc29uIG1lc3NhZ2UgYm9keSBmb3IgcG9zdGluZyBkYXRhIHRvIEFQSVxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuXG4vLyBkZWZhdWx0IGluZGV4IHJvdXRlXG5hcHAucG9zdCgnL2RhdGEnLCAocmVxLCByZXMpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhyZXEuYm9keSlcblxuICAgICAgICBjb25zdCBxdWVyeSA9IG1ha2VRdWVyeShyZXEuYm9keS5kYXRhKVxuICAgICAgICBjb24ucXVlcnkocXVlcnksIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAgICAgICAgIGlmIChlcnIpIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgZWxzZSBjb25zb2xlLmxvZyhcIkRhdGEgcmVjb3JkZWRcIik7XG4gICAgICAgIH0pO1xuICAgIHJlcy5zZW5kKCdEYXRhIHJlY2VpdmVkIScpO1xufSk7XG5cblxuXG5cbi8vIFNUQVJUIFRIRSBTRVJWRVJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA5MDkwO1xuYXBwLmxpc3RlbihQT1JUKTtcbmNvbnNvbGUubG9nKGBsaXN0ZW5pbmcgb246ICR7UE9SVH1gKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dotenv",
        "config",
        "con",
        "mysql",
        "createConnection",
        "host",
        "process",
        "env",
        "HOST",
        "user",
        "DBUSER",
        "password",
        "PASSWORD",
        "database",
        "DATABASE",
        "connect",
        "err",
        "console",
        "log",
        "app",
        "use",
        "express",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "query",
        "body",
        "data",
        "result",
        "send",
        "PORT",
        "listen"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEAA,mBAAOC,MAAP;;AAGA,IAAIC,GAAG,GAAGC,kBAAMC,gBAAN,CAAuB;AAC7BC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IADW;AAE7BC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,MAFW;AAG7BC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,QAHO;AAI7BC,EAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJO,CAAvB,CAAV;;AAOEZ,GAAG,CAACa,OAAJ,CAAY,UAASC,GAAT,EAAc;AACxB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,CAHD;AAKA,IAAMC,GAAG,GAAG,0BAAZ;AAEFA,GAAG,CAACC,GAAJ,CAAQC,8BAAe,QAAf,CAAR,E,CAEA;;AACAF,GAAG,CAACC,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQE,uBAAWG,IAAX,EAAR,E,CAGA;;AACAN,GAAG,CAACO,IAAJ,CAAS,OAAT,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B;AAEI,MAAMC,KAAK,GAAG,0BAAUF,GAAG,CAACG,IAAJ,CAASC,IAAnB,CAAd;AACA7B,EAAAA,GAAG,CAAC2B,KAAJ,CAAUA,KAAV,EAAiB,UAAUb,GAAV,EAAegB,MAAf,EAAuB;AACtC,QAAIhB,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAT,KACKC,OAAO,CAACC,GAAR,CAAY,eAAZ;AACN,GAHD;AAIJU,EAAAA,GAAG,CAACK,IAAJ,CAAS,gBAAT;AACH,CATD,E,CAcA;AACA;;AACA,IAAMC,IAAI,GAAG5B,OAAO,CAACC,GAAR,CAAY2B,IAAZ,IAAoB,IAAjC;AACAf,GAAG,CAACgB,MAAJ,CAAWD,IAAX;AACAjB,OAAO,CAACC,GAAR,yBAA6BgB,IAA7B",
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport path, { parse } from 'path';\n\nimport mysql from 'mysql';\nimport dotenv from 'dotenv'\nimport {makeQuery} from './parseData'\n\ndotenv.config();\n\n\nvar con = mysql.createConnection({\n    host: process.env.HOST,\n    user: process.env.DBUSER,\n    password: process.env.PASSWORD,\n    database: process.env.DATABASE\n  });\n  \n  con.connect(function(err) {\n    if (err) throw err;\n    console.log(\"Connected to database!\");\n  });\n  \n  const app = express();\n\napp.use(express.static('public'));\n\n// enable json message body for posting data to API\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n\n// default index route\napp.post('/data', (req, res) => {\n    // console.log(req.body)\n\n        const query = makeQuery(req.body.data)\n        con.query(query, function (err, result) {\n          if (err) console.log(err);\n          else console.log(\"Data recorded\");\n        });\n    res.send('Data received!');\n});\n\n\n\n\n// START THE SERVER\n// =============================================================================\nconst PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(`listening on: ${PORT}`);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1617830903276
  },
  "{\"sourceRoot\":\"/Users/janeacierno/IndDiff/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/janeacierno/IndDiff\",\"filename\":\"/Users/janeacierno/IndDiff/parseData.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/janeacierno/IndDiff\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/janeacierno/IndDiff",
      "filename": "/Users/janeacierno/IndDiff/parseData.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/janeacierno/IndDiff",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/janeacierno/IndDiff/parseData.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/janeacierno/IndDiff/parseData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/janeacierno/IndDiff/",
        "sourceFileName": "parseData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeQuery = makeQuery;\n\nvar _bodyParser = require(\"body-parser\");\n\n// This file holds functions for parsing the data\nfunction reformatData(data) {\n  //in parse data...\n  var allData = [];\n  var Heinz = [\"steal the money from his work\", \"blackmail someone for the money\", \"commit credit card fraud\", \"get the medicine by stealing\", \"sell his own medication\", \"sell all his clothes for money\", \"go on strike until wages increase\", \"try other medicines at random\", \"be given the medicine by a doctor\", \"inherit money from a close relative\", \"receive the money from a stranger\", \"discover a cheap new medicine\", \"use a generic medication instead\", \"buy a different insurance plan\", \"enroll in federal healthcare\", \"borrow the money from a bank\", \"be given the money by a turtle\", \"make the money time traveling\", \"grow the money on a tree\", \"get the money by clapping\"];\n  var Josh = [\"steal another person's car\", \"take a taxi without paying\", \"take another driver hostage\", \"sneak onto public transportation\", \"book a flight for next year\", \"sell car for ride to airport\", \"pay 1000 dollars for a ride\", \"try to run there in time\", \"beckon a friend passing by\", \"convince the airport to delay flight\", \"get a stranger to drive him\", \"arrange for a private plane\", \"reschedule for a later flight\", \"ask the gas station clerk for help\", \"call a friend for a ride\", \"take public transportation\", \"get a new car by thinking\", \"ride a cat to the airport\", \"teleport himself to the airport\", \"levitate and fly to the airport\"];\n  var Brian = [\"overcharge the next customers\", \"steal money from a coworker\", \"lie about how much the bakery sold\", \"give new customers incorrect change\", \"close the store five hours early\", \"pay with his retirement fund\", \"try to invent new pastries\", \"discount food to encourage tipping\", \"find the money on the ground\", \"discover the money is in his pocket\", \"get a child to donate the money\", \"receive a 100 dollar tip\", \"explain the situation to his boss\", \"ask other employees what to do\", \"use money from his own wallet\", \"borrow money from a friend\", \"turn the cash register invisible\", \"use some monopoly money instead\", \"take pictures of missing bills\", \"get the money by sneezing\"];\n  var Mary = [\"quickly copy someone's homework\", \"put her name on a friend's homework\", \"forge an excuse note\", \"lie about being sick to go home\", \"ask her mom to FedEx the homework\", \"look under the lunchroom tables\", \"turn in a completely blank page\", \"turn in last week's homework again\", \"discover her teacher is absent\", \"learn school is canceled today\", \"remember she has an extra copy\", \"be given an A by mistake\", \"run home to get her homework\", \"bring in her homework tomorrow\", \"explain what happened to her teacher\", \"quickly redo the homework assignment\", \"have her homework teleported\", \"remind herself yesterday evening\", \"turn in several socks instead\", \"erase the teacher's memory\"];\n  var Brad = [\"secretly take his friends' food\", \"leave the weakest people behind\", \"rob other hikers they meet\", \"kill his friend's dog for food\", \"go hunting for water buffalo\", \"eat random berries and leaves\", \"each venture off independently\", \"eat all their food immediately\", \"find thermal vents to keep warm\", \"find a stream showing the path\", \"meet a former expedition guide\", \"find an abandoned bear cave\", \"stay put and wait for help\", \"get more food by hunting and fishing\", \"build a large fire to alert rescuers\", \"create a shelter to stay warm\", \"use his mind to keep everyone warm\", \"make new jackets from pine trees\", \"alert airplanes overhead by yelling\", \"grind up rocks for food\"];\n  var Liz = [\"go for a run outside instead\", \"decide to lift weights at home\", \"pay for a one-day gym pass\", \"renew her gym membership\", \"decide to never exercise again\", \"try again in three minutes\", \"complain in a foreign language\", \"run back and forth in the lobby\", \"turn invisible and go in\", \"wish all gyms to be free forever\", \"renew her membership by blinking\", \"turn her hat into a gym pass\", \"take someone else's gym card\", \"claim she left her wallet inside\", \"sneak past the gym attendant\", \"go in the back door without paying\", \"learn the gym stopped checking IDs\", \"receive a free lifetime membership\", \"find a one-day pass in purse\", \"discover the gym is free today\"];\n  var Sam = [\"try another credit card\", \"pay his date back later\", \"write a paper check instead\", \"go to a nearby ATM\", \"start cooking in the restaurant’s kitchen\", \"order an entire second meal\", \"never eat Italian food again\", \"run around the restaurant screaming\", \"wish money into his account\", \"collect money off a tree\", \"make the restaurant food free\", \"summon money out of thin air\", \"take money from the cashier\", \"sneak out of the restaurant\", \"steal money from his date\", \"pretend dinner made him sick\", \"be given a free meal\", \"have a stranger pay\", \"find a $100 gift card\", \"pay with European money\"];\n  var Sara = [\"ask for an exam extension\", \"study hard the whole night\", \"participate in a study session\", \"ask her professor for help\", \"drop out of the college\", \"try to answer every question incorrectly\", \"turn in last month’s exam\", \"start studying after the exam\", \"pause time to study\", \"acquire a photographic memory\", \"upload the answers to her brain\", \"read her smartest classmate’s mind\", \"lie about a family emergency\", \"copy her classmate’s answers\", \"poison her professor before class\", \"pull the fire alarm during testing\", \"guess correctly on most questions\", \"have her professor excuse her\", \"find out the test is cancelled\", \"realize the test is optional\"];\n  var Bob = [\"admit that the bag is missing\", \"help her search for the bag\", \"report the missing bag\", \"ask other people what they saw\", \"start singing famous opera ballads\", \"build a new bag out of pencils\", \"wait for the thief to return it\", \"look for the bag on the ceiling\", \"teleport to the bag’s location\", \"summon the bag with a magic wand\", \"erase the woman’s memory\", \"undo the past few events\", \"leave before the woman returns\", \"lie that the bag was stolen at gunpoint\", \"blame another person at the library\", \"pretend to be deaf\", \"convince her she doesn’t need it\", \"see the thief walking by with the bag\", \"discover the woman deliberately hid it\", \"realize the bag was never missing\"];\n  var Emily = [\"promise him cake when he gets home\", \"go buy a nut-free dessert\", \"serve ice cream instead\", \"give the child a toy instead\", \"hide the forks from everyone\", \"postpone the party for a month\", \"send everyone home early\", \"explain the history of cake\", \"zap the nuts from the cake\", \"modify genetics to eliminate allergies\", \"pull the allergy out of him\", \"convince him to not have a reaction\", \"lie that the cake is nut-free\", \"kick the child out of the party\", \"reprimand him for inconveniencing everyone\", \"blame the child’s parents for genetics\", \"discover a nut-free cake in her bag\", \"invent an anti-allergy remedy\", \"learn that the child was lying\", \"learn that the child doesn’t want cake\"];\n  var demo1 = JSON.parse(data[1][\"responses\"]); //var demo2 = JSON.parse(data[3][\"responses\"]);\n\n  var first_vignette_index = 24;\n  var num_vignettes = 10;\n  var num_q_per_vignette = 20;\n  var crt_index = first_vignette_index + num_vignettes + num_vignettes * 2 * num_q_per_vignette;\n  var crtData = [\"hi\"]; //Object.values(JSON.parse(data[crt_index][\"responses\"]));\n\n  var baiData = [\"hello\"]; //Object.values(JSON.parse(data[crt_index+1][\"responses\"]));\n\n  var bdiData = [\"hey\"]; //Object.values(JSON.parse(data[crt_index+2][\"responses\"]));\n\n  var warmup_index = 3;\n  var num_warmup_trials = 20;\n  var trial = {};\n  var view_time = 0;\n  var trial_vignette_order = 0;\n  var trial_vignette = \"warmup\";\n  var stim_order = 0;\n  var i = warmup_index;\n\n  while (i <= num_warmup_trials) {\n    var trialData = {}; //demographic info\n\n    trialData.id = demo1[\"Q7\"];\n    trialData.age = demo1[\"Q0\"];\n    trialData.gender = demo1[\"Q5\"];\n    trialData.hand = demo1[\"Q1\"];\n    trialData.education = demo1[\"Q6\"];\n    trialData.language = demo1[\"Q2\"];\n    trialData.country = demo1[\"Q4\"];\n    trialData.nationality = demo1[\"Q3\"]; //anxiety inventory\n\n    trialData.crt = crtData;\n    trialData.bai = baiData;\n    trialData.bdi = bdiData; //trial specific info\n\n    trial = data[i];\n    trialData.vignette = trial_vignette;\n    trialData.vignette_order = trial_vignette_order;\n    trialData.rt_vignette = view_time;\n    trialData.stimulus = trial[\"stimulus\"];\n    trialData.stimulus_order = i - 4;\n    trialData.modal_type = \"\";\n    trialData.speed = trial.speed; // I added trialData.modal\n\n    trialData.modal = trial.modal;\n    trialData.response = \"\";\n    trialData.correct = trial.correct;\n    trialData.rt_trial = trial[\"rt\"];\n    allData.push(trialData);\n    i = i + 1;\n  } //vignette trials\n\n\n  i = first_vignette_index;\n\n  for (var j = 0; j < num_vignettes; j++) {\n    trial_vignette_order = trial_vignette_order + 1;\n    var s = data[i + 1][\"stimulus\"];\n    var v = \"\";\n    if (Heinz.includes(s)) v = \"Heinz\";else if (Josh.includes(s)) v = \"Josh\";else if (Brian.includes(s)) v = \"Brian\";else if (Mary.includes(s)) v = \"Mary\";else if (Brad.includes(s)) v = \"Brad\";else if (Liz.includes(s)) v = \"Liz\";else if (Sam.includes(s)) v = \"Sam\";else if (Sara.includes(s)) v = \"Sara\";else if (Bob.includes(s)) v = \"Bob\";else v = \"Emily\";\n    trial_vignette = v;\n    stim_order = 1;\n    trial = data[i];\n    view_time = trial[\"rt\"];\n    i = i + 1;\n\n    for (var k = 0; k < num_q_per_vignette; k = k + 1) {\n      trial = data[i];\n      trialData = {}; //demographic info\n\n      trialData.id = demo1[\"Q7\"];\n      trialData.age = demo1[\"Q0\"];\n      trialData.gender = demo1[\"Q5\"];\n      trialData.hand = demo1[\"Q1\"];\n      trialData.education = demo1[\"Q6\"];\n      trialData.language = demo1[\"Q2\"];\n      trialData.country = demo1[\"Q4\"];\n      trialData.nationality = demo1[\"Q3\"]; //anxiety inventory\n\n      trialData.crt = crtData;\n      trialData.bai = baiData;\n      trialData.bdi = bdiData; //trial specific info\n\n      trialData.vignette = trial_vignette;\n      trialData.vignette_order = trial_vignette_order;\n      trialData.rt_vignette = view_time;\n      trialData.stimulus_order = stim_order;\n      trialData.stimulus = trial[\"stimulus\"];\n      trialData.modal_type = trial.modal_type;\n      trialData.speed = trial.speed;\n      trialData.response = trial[\"answered\"];\n      trialData.correct = trialData.response == trialData.modal_type;\n      trialData.rt_trial = trial[\"rt\"];\n      stim_order = stim_order + 1;\n      allData.push(trialData);\n      i = i + 2;\n    }\n  }\n\n  return allData;\n}\n\nfunction makeQuery(data) {\n  console.log(\"Parsing data\");\n  data = JSON.parse(JSON.stringify(data));\n  data = reformatData(data);\n  console.log(\"done\");\n  var keys = \"\";\n  var keyArr = Object.keys(data[0]);\n\n  for (var i = 0; i < keyArr.length; i++) {\n    keys = keys.concat(keyArr[i] + \", \");\n  }\n\n  keys = \"(\" + keys.substring(0, keys.length - 2) + \")\";\n  var valuesList = [];\n  var x = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    var dict = data[i];\n    valuesList[x] = \"\";\n    var valArray = Object.values(dict);\n\n    for (var j = 0; j < valArray.length; j++) {\n      valuesList[x] = valuesList[x].concat('\"' + valArray[j] + '\", ');\n    }\n\n    x++;\n  }\n\n  var valuesStr = \"\";\n\n  for (var i = 0; i < valuesList.length; i++) {\n    var values = valuesList[i];\n    values = \"(\" + values.substring(0, values.length - 2) + \")\";\n    valuesStr = valuesStr + values + \", \";\n  }\n\n  valuesStr = valuesStr.substring(0, valuesStr.length - 2); //console.log(\"INSERT INTO responses\" + keys + \" \" + \"VALUES \" + valuesStr + \";\");\n\n  return \"INSERT INTO ind_diff\" + keys + \" \" + \"VALUES \" + valuesStr + \";\";\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "parseData.js"
      ],
      "names": [
        "reformatData",
        "data",
        "allData",
        "Heinz",
        "Josh",
        "Brian",
        "Mary",
        "Brad",
        "Liz",
        "Sam",
        "Sara",
        "Bob",
        "Emily",
        "demo1",
        "JSON",
        "parse",
        "first_vignette_index",
        "num_vignettes",
        "num_q_per_vignette",
        "crt_index",
        "crtData",
        "baiData",
        "bdiData",
        "warmup_index",
        "num_warmup_trials",
        "trial",
        "view_time",
        "trial_vignette_order",
        "trial_vignette",
        "stim_order",
        "i",
        "trialData",
        "id",
        "age",
        "gender",
        "hand",
        "education",
        "language",
        "country",
        "nationality",
        "crt",
        "bai",
        "bdi",
        "vignette",
        "vignette_order",
        "rt_vignette",
        "stimulus",
        "stimulus_order",
        "modal_type",
        "speed",
        "modal",
        "response",
        "correct",
        "rt_trial",
        "push",
        "j",
        "s",
        "v",
        "includes",
        "k",
        "makeQuery",
        "console",
        "log",
        "stringify",
        "keys",
        "keyArr",
        "Object",
        "length",
        "concat",
        "substring",
        "valuesList",
        "x",
        "dict",
        "valArray",
        "values",
        "valuesStr"
      ],
      "mappings": ";;;;;;;AACA;;AADA;AAEA,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AACxB;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,CAAC,+BAAD,EAAkC,iCAAlC,EAAqE,0BAArE,EAAiG,8BAAjG,EAAgI,yBAAhI,EAA2J,gCAA3J,EAA6L,mCAA7L,EAAkO,+BAAlO,EAAkQ,mCAAlQ,EAAuS,qCAAvS,EAA8U,mCAA9U,EAAmX,+BAAnX,EAAmZ,kCAAnZ,EAAub,gCAAvb,EAAyd,8BAAzd,EAAyf,8BAAzf,EAAwhB,gCAAxhB,EAA0jB,+BAA1jB,EAA2lB,0BAA3lB,EAAunB,2BAAvnB,CAAZ;AACA,MAAIC,IAAI,GAAG,CAAC,4BAAD,EAA+B,4BAA/B,EAA6D,6BAA7D,EAA4F,kCAA5F,EAA+H,6BAA/H,EAA8J,8BAA9J,EAA8L,6BAA9L,EAA6N,0BAA7N,EAAwP,4BAAxP,EAAsR,sCAAtR,EAA8T,6BAA9T,EAA6V,6BAA7V,EAA2X,+BAA3X,EAA4Z,oCAA5Z,EAAkc,0BAAlc,EAA8d,4BAA9d,EAA2f,2BAA3f,EAAwhB,2BAAxhB,EAAqjB,iCAArjB,EAAwlB,iCAAxlB,CAAX;AACA,MAAIC,KAAK,GAAG,CAAC,+BAAD,EAAkC,6BAAlC,EAAiE,oCAAjE,EAAuG,qCAAvG,EAA6I,kCAA7I,EAAiL,8BAAjL,EAAiN,4BAAjN,EAA+O,oCAA/O,EAAoR,8BAApR,EAAoT,qCAApT,EAA2V,iCAA3V,EAA8X,0BAA9X,EAAyZ,mCAAzZ,EAA8b,gCAA9b,EAAge,+BAAhe,EAAigB,4BAAjgB,EAA8hB,kCAA9hB,EAAkkB,iCAAlkB,EAAqmB,gCAArmB,EAAuoB,2BAAvoB,CAAZ;AACA,MAAIC,IAAI,GAAG,CAAC,iCAAD,EAAoC,qCAApC,EAA2E,sBAA3E,EAAmG,iCAAnG,EAAqI,mCAArI,EAA0K,iCAA1K,EAA6M,iCAA7M,EAAgP,oCAAhP,EAAqR,gCAArR,EAAuT,gCAAvT,EAAyV,gCAAzV,EAA2X,0BAA3X,EAAsZ,8BAAtZ,EAAsb,gCAAtb,EAAwd,sCAAxd,EAAggB,sCAAhgB,EAAuiB,8BAAviB,EAAukB,kCAAvkB,EAA2mB,+BAA3mB,EAA4oB,4BAA5oB,CAAX;AACA,MAAIC,IAAI,GAAG,CAAC,iCAAD,EAAoC,iCAApC,EAAuE,4BAAvE,EAAqG,gCAArG,EAAsI,8BAAtI,EAAsK,+BAAtK,EAAuM,gCAAvM,EAAyO,gCAAzO,EAA0Q,iCAA1Q,EAA6S,gCAA7S,EAA+U,gCAA/U,EAAiX,6BAAjX,EAA+Y,4BAA/Y,EAA6a,sCAA7a,EAAqd,sCAArd,EAA6f,+BAA7f,EAA6hB,oCAA7hB,EAAmkB,kCAAnkB,EAAumB,qCAAvmB,EAA8oB,yBAA9oB,CAAX;AACA,MAAIC,GAAG,GAAG,CAAC,8BAAD,EAAiC,gCAAjC,EAAmE,4BAAnE,EAAiG,0BAAjG,EAA4H,gCAA5H,EAA8J,4BAA9J,EAA4L,gCAA5L,EAA8N,iCAA9N,EAAgQ,0BAAhQ,EAA4R,kCAA5R,EAAgU,kCAAhU,EAAoW,8BAApW,EAAmY,8BAAnY,EAAma,kCAAna,EAAuc,8BAAvc,EAAue,oCAAve,EAA4gB,oCAA5gB,EAAkjB,oCAAljB,EAAwlB,8BAAxlB,EAAwnB,gCAAxnB,CAAV;AACA,MAAIC,GAAG,GAAG,CAAC,yBAAD,EAA4B,yBAA5B,EAAuD,6BAAvD,EAAsF,oBAAtF,EAA2G,2CAA3G,EAAuJ,6BAAvJ,EAAsL,8BAAtL,EAAqN,qCAArN,EAA2P,6BAA3P,EAAyR,0BAAzR,EAAoT,+BAApT,EAAoV,8BAApV,EAAmX,6BAAnX,EAAiZ,6BAAjZ,EAA+a,2BAA/a,EAA2c,8BAA3c,EAA0e,sBAA1e,EAAigB,qBAAjgB,EAAuhB,uBAAvhB,EAA+iB,yBAA/iB,CAAV;AACA,MAAIC,IAAI,GAAG,CAAC,2BAAD,EAA6B,4BAA7B,EAA0D,gCAA1D,EAA2F,4BAA3F,EAAwH,yBAAxH,EAAkJ,0CAAlJ,EAA6L,2BAA7L,EAAyN,+BAAzN,EAAyP,qBAAzP,EAA+Q,+BAA/Q,EAA+S,iCAA/S,EAAiV,oCAAjV,EAAsX,8BAAtX,EAAqZ,8BAArZ,EAAob,mCAApb,EAAwd,oCAAxd,EAA6f,mCAA7f,EAAiiB,+BAAjiB,EAAikB,gCAAjkB,EAAkmB,8BAAlmB,CAAX;AACA,MAAIC,GAAG,GAAG,CAAC,+BAAD,EAAiC,6BAAjC,EAA+D,wBAA/D,EAAwF,gCAAxF,EAAyH,oCAAzH,EAA8J,gCAA9J,EAA+L,iCAA/L,EAAiO,iCAAjO,EAAmQ,gCAAnQ,EAAoS,kCAApS,EAAuU,0BAAvU,EAAkW,0BAAlW,EAA6X,gCAA7X,EAA8Z,yCAA9Z,EAAwc,qCAAxc,EAA8e,oBAA9e,EAAmgB,kCAAngB,EAAsiB,uCAAtiB,EAA8kB,wCAA9kB,EAAunB,mCAAvnB,CAAV;AACA,MAAIC,KAAK,GAAG,CAAC,oCAAD,EAAsC,2BAAtC,EAAkE,yBAAlE,EAA4F,8BAA5F,EAA2H,8BAA3H,EAA0J,gCAA1J,EAA2L,0BAA3L,EAAsN,6BAAtN,EAAoP,4BAApP,EAAiR,wCAAjR,EAA0T,6BAA1T,EAAwV,qCAAxV,EAA8X,+BAA9X,EAA8Z,iCAA9Z,EAAgc,4CAAhc,EAA6e,wCAA7e,EAAshB,qCAAthB,EAA4jB,+BAA5jB,EAA4lB,gCAA5lB,EAA6nB,wCAA7nB,CAAZ;AACA,MAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWd,IAAI,CAAC,CAAD,CAAJ,CAAQ,WAAR,CAAX,CAAZ,CAbwB,CAcxB;;AACA,MAAIe,oBAAoB,GAAG,EAA3B;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,kBAAkB,GAAG,EAAzB;AACA,MAAIC,SAAS,GAAGH,oBAAoB,GAAGC,aAAvB,GAAwCA,aAAa,GAAC,CAAd,GAAgBC,kBAAxE;AACA,MAAIE,OAAO,GAAG,CAAC,IAAD,CAAd,CAnBwB,CAmBF;;AACtB,MAAIC,OAAO,GAAG,CAAC,OAAD,CAAd,CApBwB,CAoBC;;AACzB,MAAIC,OAAO,GAAG,CAAC,KAAD,CAAd,CArBwB,CAqBD;;AACvB,MAAIC,YAAY,GAAG,CAAnB;AACA,MAAIC,iBAAiB,GAAG,EAAxB;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,oBAAoB,GAAG,CAA3B;AACA,MAAIC,cAAc,GAAG,QAArB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,CAAC,GAAGP,YAAR;;AACA,SAAMO,CAAC,IAAIN,iBAAX,EAA8B;AAC1B,QAAIO,SAAS,GAAG,EAAhB,CAD0B,CAE1B;;AACAA,IAAAA,SAAS,CAACC,EAAV,GAAenB,KAAK,CAAC,IAAD,CAApB;AACAkB,IAAAA,SAAS,CAACE,GAAV,GAAgBpB,KAAK,CAAC,IAAD,CAArB;AACAkB,IAAAA,SAAS,CAACG,MAAV,GAAmBrB,KAAK,CAAC,IAAD,CAAxB;AACAkB,IAAAA,SAAS,CAACI,IAAV,GAAiBtB,KAAK,CAAC,IAAD,CAAtB;AACAkB,IAAAA,SAAS,CAACK,SAAV,GAAsBvB,KAAK,CAAC,IAAD,CAA3B;AACAkB,IAAAA,SAAS,CAACM,QAAV,GAAqBxB,KAAK,CAAC,IAAD,CAA1B;AACAkB,IAAAA,SAAS,CAACO,OAAV,GAAoBzB,KAAK,CAAC,IAAD,CAAzB;AACAkB,IAAAA,SAAS,CAACQ,WAAV,GAAwB1B,KAAK,CAAC,IAAD,CAA7B,CAV0B,CAW1B;;AACAkB,IAAAA,SAAS,CAACS,GAAV,GAAgBpB,OAAhB;AACAW,IAAAA,SAAS,CAACU,GAAV,GAAgBpB,OAAhB;AACAU,IAAAA,SAAS,CAACW,GAAV,GAAgBpB,OAAhB,CAd0B,CAe1B;;AACAG,IAAAA,KAAK,GAAGxB,IAAI,CAAC6B,CAAD,CAAZ;AACAC,IAAAA,SAAS,CAACY,QAAV,GAAqBf,cAArB;AACAG,IAAAA,SAAS,CAACa,cAAV,GAA2BjB,oBAA3B;AACAI,IAAAA,SAAS,CAACc,WAAV,GAAwBnB,SAAxB;AACAK,IAAAA,SAAS,CAACe,QAAV,GAAqBrB,KAAK,CAAC,UAAD,CAA1B;AACAM,IAAAA,SAAS,CAACgB,cAAV,GAA2BjB,CAAC,GAAC,CAA7B;AACAC,IAAAA,SAAS,CAACiB,UAAV,GAAuB,EAAvB;AACAjB,IAAAA,SAAS,CAACkB,KAAV,GAAkBxB,KAAK,CAACwB,KAAxB,CAvB0B,CAwB1B;;AACAlB,IAAAA,SAAS,CAACmB,KAAV,GAAkBzB,KAAK,CAACyB,KAAxB;AACAnB,IAAAA,SAAS,CAACoB,QAAV,GAAqB,EAArB;AACApB,IAAAA,SAAS,CAACqB,OAAV,GAAoB3B,KAAK,CAAC2B,OAA1B;AACArB,IAAAA,SAAS,CAACsB,QAAV,GAAqB5B,KAAK,CAAC,IAAD,CAA1B;AACAvB,IAAAA,OAAO,CAACoD,IAAR,CAAavB,SAAb;AACAD,IAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AACH,GA7DuB,CA8DxB;;;AACAA,EAAAA,CAAC,GAAGd,oBAAJ;;AACA,OAAI,IAAIuC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACtC,aAAf,EAA8BsC,CAAC,EAA/B,EAAmC;AAC/B5B,IAAAA,oBAAoB,GAAGA,oBAAoB,GAAG,CAA9C;AACA,QAAI6B,CAAC,GAAGvD,IAAI,CAAC6B,CAAC,GAAC,CAAH,CAAJ,CAAU,UAAV,CAAR;AACA,QAAI2B,CAAC,GAAG,EAAR;AACA,QAAItD,KAAK,CAACuD,QAAN,CAAeF,CAAf,CAAJ,EAAuBC,CAAC,GAAG,OAAJ,CAAvB,KACK,IAAIrD,IAAI,CAACsD,QAAL,CAAcF,CAAd,CAAJ,EAAsBC,CAAC,GAAG,MAAJ,CAAtB,KACA,IAAIpD,KAAK,CAACqD,QAAN,CAAeF,CAAf,CAAJ,EAAuBC,CAAC,GAAG,OAAJ,CAAvB,KACA,IAAInD,IAAI,CAACoD,QAAL,CAAcF,CAAd,CAAJ,EAAsBC,CAAC,GAAG,MAAJ,CAAtB,KACA,IAAIlD,IAAI,CAACmD,QAAL,CAAcF,CAAd,CAAJ,EAAsBC,CAAC,GAAG,MAAJ,CAAtB,KACA,IAAIjD,GAAG,CAACkD,QAAJ,CAAaF,CAAb,CAAJ,EAAqBC,CAAC,GAAG,KAAJ,CAArB,KACA,IAAIhD,GAAG,CAACiD,QAAJ,CAAaF,CAAb,CAAJ,EAAqBC,CAAC,GAAG,KAAJ,CAArB,KACA,IAAI/C,IAAI,CAACgD,QAAL,CAAcF,CAAd,CAAJ,EAAsBC,CAAC,GAAG,MAAJ,CAAtB,KACA,IAAI9C,GAAG,CAAC+C,QAAJ,CAAaF,CAAb,CAAJ,EAAqBC,CAAC,GAAG,KAAJ,CAArB,KACAA,CAAC,GAAG,OAAJ;AACL7B,IAAAA,cAAc,GAAG6B,CAAjB;AACA5B,IAAAA,UAAU,GAAG,CAAb;AACAJ,IAAAA,KAAK,GAAGxB,IAAI,CAAC6B,CAAD,CAAZ;AACAJ,IAAAA,SAAS,GAAGD,KAAK,CAAC,IAAD,CAAjB;AACAK,IAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;;AACA,SAAI,IAAI6B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACzC,kBAAf,EAAmCyC,CAAC,GAACA,CAAC,GAAC,CAAvC,EAA0C;AACtClC,MAAAA,KAAK,GAAGxB,IAAI,CAAC6B,CAAD,CAAZ;AACAC,MAAAA,SAAS,GAAG,EAAZ,CAFsC,CAGtC;;AACAA,MAAAA,SAAS,CAACC,EAAV,GAAenB,KAAK,CAAC,IAAD,CAApB;AACAkB,MAAAA,SAAS,CAACE,GAAV,GAAgBpB,KAAK,CAAC,IAAD,CAArB;AACAkB,MAAAA,SAAS,CAACG,MAAV,GAAmBrB,KAAK,CAAC,IAAD,CAAxB;AACAkB,MAAAA,SAAS,CAACI,IAAV,GAAiBtB,KAAK,CAAC,IAAD,CAAtB;AACAkB,MAAAA,SAAS,CAACK,SAAV,GAAsBvB,KAAK,CAAC,IAAD,CAA3B;AACAkB,MAAAA,SAAS,CAACM,QAAV,GAAqBxB,KAAK,CAAC,IAAD,CAA1B;AACAkB,MAAAA,SAAS,CAACO,OAAV,GAAoBzB,KAAK,CAAC,IAAD,CAAzB;AACAkB,MAAAA,SAAS,CAACQ,WAAV,GAAwB1B,KAAK,CAAC,IAAD,CAA7B,CAXsC,CAYtC;;AACAkB,MAAAA,SAAS,CAACS,GAAV,GAAgBpB,OAAhB;AACAW,MAAAA,SAAS,CAACU,GAAV,GAAgBpB,OAAhB;AACAU,MAAAA,SAAS,CAACW,GAAV,GAAgBpB,OAAhB,CAfsC,CAgBtC;;AACAS,MAAAA,SAAS,CAACY,QAAV,GAAqBf,cAArB;AACAG,MAAAA,SAAS,CAACa,cAAV,GAA2BjB,oBAA3B;AACAI,MAAAA,SAAS,CAACc,WAAV,GAAwBnB,SAAxB;AACAK,MAAAA,SAAS,CAACgB,cAAV,GAA2BlB,UAA3B;AACAE,MAAAA,SAAS,CAACe,QAAV,GAAqBrB,KAAK,CAAC,UAAD,CAA1B;AACAM,MAAAA,SAAS,CAACiB,UAAV,GAAuBvB,KAAK,CAACuB,UAA7B;AACAjB,MAAAA,SAAS,CAACkB,KAAV,GAAkBxB,KAAK,CAACwB,KAAxB;AACAlB,MAAAA,SAAS,CAACoB,QAAV,GAAqB1B,KAAK,CAAC,UAAD,CAA1B;AACAM,MAAAA,SAAS,CAACqB,OAAV,GAAqBrB,SAAS,CAACoB,QAAV,IAAsBpB,SAAS,CAACiB,UAArD;AACAjB,MAAAA,SAAS,CAACsB,QAAV,GAAqB5B,KAAK,CAAC,IAAD,CAA1B;AACAI,MAAAA,UAAU,GAAGA,UAAU,GAAC,CAAxB;AACA3B,MAAAA,OAAO,CAACoD,IAAR,CAAavB,SAAb;AACAD,MAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AACH;AACJ;;AACD,SAAO5B,OAAP;AACH;;AAEM,SAAS0D,SAAT,CAAmB3D,IAAnB,EAAyB;AAC5B4D,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA7D,EAAAA,IAAI,GAAGa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACiD,SAAL,CAAe9D,IAAf,CAAX,CAAP;AACAA,EAAAA,IAAI,GAAGD,YAAY,CAACC,IAAD,CAAnB;AACA4D,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACF,IAAP,CAAY/D,IAAI,CAAC,CAAD,CAAhB,CAAb;;AACA,OAAI,IAAI6B,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACmC,MAAM,CAACE,MAAtB,EAA8BrC,CAAC,EAA/B,EAAmC;AAC/BkC,IAAAA,IAAI,GAAGA,IAAI,CAACI,MAAL,CAAYH,MAAM,CAACnC,CAAD,CAAN,GAAY,IAAxB,CAAP;AACH;;AACDkC,EAAAA,IAAI,GAAG,MAAMA,IAAI,CAACK,SAAL,CAAe,CAAf,EAAkBL,IAAI,CAACG,MAAL,GAAY,CAA9B,CAAN,GAAyC,GAAhD;AACA,MAAIG,UAAU,GAAG,EAAjB;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,OAAI,IAAIzC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC7B,IAAI,CAACkE,MAApB,EAA4BrC,CAAC,EAA7B,EAAiC;AAC7B,QAAI0C,IAAI,GAAGvE,IAAI,CAAC6B,CAAD,CAAf;AACAwC,IAAAA,UAAU,CAACC,CAAD,CAAV,GAAgB,EAAhB;AACA,QAAIE,QAAQ,GAAGP,MAAM,CAACQ,MAAP,CAAcF,IAAd,CAAf;;AACA,SAAI,IAAIjB,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACkB,QAAQ,CAACN,MAAxB,EAAgCZ,CAAC,EAAjC,EAAqC;AACjCe,MAAAA,UAAU,CAACC,CAAD,CAAV,GAAgBD,UAAU,CAACC,CAAD,CAAV,CAAcH,MAAd,CAAqB,MAAMK,QAAQ,CAAClB,CAAD,CAAd,GAAoB,KAAzC,CAAhB;AACH;;AACDgB,IAAAA,CAAC;AACJ;;AACD,MAAII,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAI7C,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACwC,UAAU,CAACH,MAA3B,EAAmCrC,CAAC,EAApC,EAAwC;AACpC,QAAI4C,MAAM,GAAGJ,UAAU,CAACxC,CAAD,CAAvB;AACA4C,IAAAA,MAAM,GAAG,MAAMA,MAAM,CAACL,SAAP,CAAiB,CAAjB,EAAoBK,MAAM,CAACP,MAAP,GAAc,CAAlC,CAAN,GAA6C,GAAtD;AACAQ,IAAAA,SAAS,GAAGA,SAAS,GAAGD,MAAZ,GAAqB,IAAjC;AACH;;AACDC,EAAAA,SAAS,GAAGA,SAAS,CAACN,SAAV,CAAoB,CAApB,EAAuBM,SAAS,CAACR,MAAV,GAAiB,CAAxC,CAAZ,CA5B4B,CA6B5B;;AACA,SAAO,yBAAyBH,IAAzB,GAAgC,GAAhC,GAAsC,SAAtC,GAAkDW,SAAlD,GAA8D,GAArE;AACH",
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "sourcesContent": [
        "// This file holds functions for parsing the data\nimport { json } from \"body-parser\"\nfunction reformatData(data) {\n    //in parse data...\n    var allData = [];\n    var Heinz = [\"steal the money from his work\", \"blackmail someone for the money\", \"commit credit card fraud\", \"get the medicine by stealing\",\"sell his own medication\", \"sell all his clothes for money\", \"go on strike until wages increase\", \"try other medicines at random\",\"be given the medicine by a doctor\", \"inherit money from a close relative\", \"receive the money from a stranger\", \"discover a cheap new medicine\",\"use a generic medication instead\", \"buy a different insurance plan\", \"enroll in federal healthcare\", \"borrow the money from a bank\",\"be given the money by a turtle\", \"make the money time traveling\", \"grow the money on a tree\", \"get the money by clapping\"];\n    var Josh = [\"steal another person's car\", \"take a taxi without paying\", \"take another driver hostage\", \"sneak onto public transportation\",\"book a flight for next year\", \"sell car for ride to airport\", \"pay 1000 dollars for a ride\", \"try to run there in time\",\"beckon a friend passing by\", \"convince the airport to delay flight\", \"get a stranger to drive him\", \"arrange for a private plane\",\"reschedule for a later flight\", \"ask the gas station clerk for help\", \"call a friend for a ride\", \"take public transportation\",\"get a new car by thinking\", \"ride a cat to the airport\", \"teleport himself to the airport\", \"levitate and fly to the airport\"];\n    var Brian = [\"overcharge the next customers\", \"steal money from a coworker\", \"lie about how much the bakery sold\", \"give new customers incorrect change\",\"close the store five hours early\", \"pay with his retirement fund\", \"try to invent new pastries\", \"discount food to encourage tipping\",\"find the money on the ground\", \"discover the money is in his pocket\", \"get a child to donate the money\", \"receive a 100 dollar tip\",\"explain the situation to his boss\", \"ask other employees what to do\", \"use money from his own wallet\", \"borrow money from a friend\",\"turn the cash register invisible\", \"use some monopoly money instead\", \"take pictures of missing bills\", \"get the money by sneezing\"];\n    var Mary = [\"quickly copy someone's homework\", \"put her name on a friend's homework\", \"forge an excuse note\", \"lie about being sick to go home\",\"ask her mom to FedEx the homework\", \"look under the lunchroom tables\", \"turn in a completely blank page\", \"turn in last week's homework again\",\"discover her teacher is absent\", \"learn school is canceled today\", \"remember she has an extra copy\", \"be given an A by mistake\",\"run home to get her homework\", \"bring in her homework tomorrow\", \"explain what happened to her teacher\", \"quickly redo the homework assignment\",\"have her homework teleported\", \"remind herself yesterday evening\", \"turn in several socks instead\", \"erase the teacher's memory\"];\n    var Brad = [\"secretly take his friends' food\", \"leave the weakest people behind\", \"rob other hikers they meet\", \"kill his friend's dog for food\",\"go hunting for water buffalo\", \"eat random berries and leaves\", \"each venture off independently\", \"eat all their food immediately\",\"find thermal vents to keep warm\", \"find a stream showing the path\", \"meet a former expedition guide\", \"find an abandoned bear cave\",\"stay put and wait for help\", \"get more food by hunting and fishing\", \"build a large fire to alert rescuers\", \"create a shelter to stay warm\",\"use his mind to keep everyone warm\", \"make new jackets from pine trees\", \"alert airplanes overhead by yelling\", \"grind up rocks for food\"];\n    var Liz = [\"go for a run outside instead\", \"decide to lift weights at home\", \"pay for a one-day gym pass\", \"renew her gym membership\",\"decide to never exercise again\", \"try again in three minutes\", \"complain in a foreign language\", \"run back and forth in the lobby\",\"turn invisible and go in\", \"wish all gyms to be free forever\", \"renew her membership by blinking\", \"turn her hat into a gym pass\",\"take someone else's gym card\", \"claim she left her wallet inside\", \"sneak past the gym attendant\", \"go in the back door without paying\",\"learn the gym stopped checking IDs\", \"receive a free lifetime membership\", \"find a one-day pass in purse\", \"discover the gym is free today\"];\n    var Sam = [\"try another credit card\", \"pay his date back later\", \"write a paper check instead\", \"go to a nearby ATM\",\"start cooking in the restaurant’s kitchen\",\"order an entire second meal\", \"never eat Italian food again\",\"run around the restaurant screaming\",\"wish money into his account\",\"collect money off a tree\",\"make the restaurant food free\",\"summon money out of thin air\",\"take money from the cashier\",\"sneak out of the restaurant\",\"steal money from his date\",\"pretend dinner made him sick\",\"be given a free meal\",\"have a stranger pay\",\"find a $100 gift card\",\"pay with European money\"];\n    var Sara = [\"ask for an exam extension\",\"study hard the whole night\",\"participate in a study session\",\"ask her professor for help\",\"drop out of the college\",\"try to answer every question incorrectly\",\"turn in last month’s exam\",\"start studying after the exam\",\"pause time to study\",\"acquire a photographic memory\",\"upload the answers to her brain\",\"read her smartest classmate’s mind\",\"lie about a family emergency\",\"copy her classmate’s answers\",\"poison her professor before class\",\"pull the fire alarm during testing\",\"guess correctly on most questions\",\"have her professor excuse her\",\"find out the test is cancelled\",\"realize the test is optional\"];\n    var Bob = [\"admit that the bag is missing\",\"help her search for the bag\",\"report the missing bag\",\"ask other people what they saw\",\"start singing famous opera ballads\",\"build a new bag out of pencils\",\"wait for the thief to return it\",\"look for the bag on the ceiling\",\"teleport to the bag’s location\",\"summon the bag with a magic wand\",\"erase the woman’s memory\",\"undo the past few events\",\"leave before the woman returns\",\"lie that the bag was stolen at gunpoint\",\"blame another person at the library\",\"pretend to be deaf\",\"convince her she doesn’t need it\",\"see the thief walking by with the bag\",\"discover the woman deliberately hid it\",\"realize the bag was never missing\"];\n    var Emily = [\"promise him cake when he gets home\",\"go buy a nut-free dessert\",\"serve ice cream instead\",\"give the child a toy instead\",\"hide the forks from everyone\",\"postpone the party for a month\",\"send everyone home early\",\"explain the history of cake\",\"zap the nuts from the cake\",\"modify genetics to eliminate allergies\",\"pull the allergy out of him\",\"convince him to not have a reaction\",\"lie that the cake is nut-free\",\"kick the child out of the party\",\"reprimand him for inconveniencing everyone\",\"blame the child’s parents for genetics\",\"discover a nut-free cake in her bag\",\"invent an anti-allergy remedy\",\"learn that the child was lying\",\"learn that the child doesn’t want cake\"]\n    var demo1 = JSON.parse(data[1][\"responses\"]);\n    //var demo2 = JSON.parse(data[3][\"responses\"]);\n    var first_vignette_index = 24;\n    var num_vignettes = 10;\n    var num_q_per_vignette = 20;\n    var crt_index = first_vignette_index + num_vignettes + (num_vignettes*2*num_q_per_vignette)\n    var crtData = [\"hi\"]; //Object.values(JSON.parse(data[crt_index][\"responses\"]));\n    var baiData = [\"hello\"]; //Object.values(JSON.parse(data[crt_index+1][\"responses\"]));\n    var bdiData = [\"hey\"]; //Object.values(JSON.parse(data[crt_index+2][\"responses\"]));\n    var warmup_index = 3;\n    var num_warmup_trials = 20;\n    var trial = {};\n    var view_time = 0;\n    var trial_vignette_order = 0;\n    var trial_vignette = \"warmup\";\n    var stim_order = 0;\n    var i = warmup_index;\n    while(i <= num_warmup_trials) {\n        var trialData = {};\n        //demographic info\n        trialData.id = demo1[\"Q7\"]\n        trialData.age = demo1[\"Q0\"];\n        trialData.gender = demo1[\"Q5\"];\n        trialData.hand = demo1[\"Q1\"];\n        trialData.education = demo1[\"Q6\"];\n        trialData.language = demo1[\"Q2\"];\n        trialData.country = demo1[\"Q4\"];\n        trialData.nationality = demo1[\"Q3\"];\n        //anxiety inventory\n        trialData.crt = crtData;\n        trialData.bai = baiData;\n        trialData.bdi = bdiData;\n        //trial specific info\n        trial = data[i];\n        trialData.vignette = trial_vignette;\n        trialData.vignette_order = trial_vignette_order;\n        trialData.rt_vignette = view_time;\n        trialData.stimulus = trial[\"stimulus\"];\n        trialData.stimulus_order = i-4;\n        trialData.modal_type = \"\";\n        trialData.speed = trial.speed;\n        // I added trialData.modal\n        trialData.modal = trial.modal;\n        trialData.response = \"\";\n        trialData.correct = trial.correct;\n        trialData.rt_trial = trial[\"rt\"];\n        allData.push(trialData);\n        i = i+1;\n    }\n    //vignette trials\n    i = first_vignette_index;\n    for(var j=0; j<num_vignettes; j++) {\n        trial_vignette_order = trial_vignette_order + 1;\n        var s = data[i+1][\"stimulus\"];\n        var v = \"\";\n        if (Heinz.includes(s)) v = \"Heinz\";\n        else if (Josh.includes(s)) v = \"Josh\";\n        else if (Brian.includes(s)) v = \"Brian\";\n        else if (Mary.includes(s)) v = \"Mary\";\n        else if (Brad.includes(s)) v = \"Brad\";\n        else if (Liz.includes(s)) v = \"Liz\";\n        else if (Sam.includes(s)) v = \"Sam\";\n        else if (Sara.includes(s)) v = \"Sara\";\n        else if (Bob.includes(s)) v = \"Bob\";\n        else v = \"Emily\";\n        trial_vignette = v;\n        stim_order = 1;\n        trial = data[i];\n        view_time = trial[\"rt\"];\n        i=i+1;\n        for(var k=0; k<num_q_per_vignette; k=k+1) {\n            trial = data[i];\n            trialData = {};\n            //demographic info\n            trialData.id = demo1[\"Q7\"]\n            trialData.age = demo1[\"Q0\"];\n            trialData.gender = demo1[\"Q5\"];\n            trialData.hand = demo1[\"Q1\"];\n            trialData.education = demo1[\"Q6\"];\n            trialData.language = demo1[\"Q2\"];\n            trialData.country = demo1[\"Q4\"];\n            trialData.nationality = demo1[\"Q3\"];\n            //anxiety inventory\n            trialData.crt = crtData;\n            trialData.bai = baiData;\n            trialData.bdi = bdiData;\n            //trial specific info\n            trialData.vignette = trial_vignette;\n            trialData.vignette_order = trial_vignette_order;\n            trialData.rt_vignette = view_time;\n            trialData.stimulus_order = stim_order;\n            trialData.stimulus = trial[\"stimulus\"];\n            trialData.modal_type = trial.modal_type;\n            trialData.speed = trial.speed;\n            trialData.response = trial[\"answered\"];\n            trialData.correct = (trialData.response == trialData.modal_type);\n            trialData.rt_trial = trial[\"rt\"];\n            stim_order = stim_order+1;\n            allData.push(trialData);\n            i = i+2;\n        }\n    }\n    return allData;\n}\n\nexport function makeQuery(data) {\n    console.log(\"Parsing data\");\n    data = JSON.parse(JSON.stringify(data));\n    data = reformatData(data);\n    console.log(\"done\");\n    var keys = \"\";\n    var keyArr = Object.keys(data[0]);\n    for(var i=0; i<keyArr.length; i++) {\n        keys = keys.concat(keyArr[i] + \", \");\n    }\n    keys = \"(\" + keys.substring(0, keys.length-2) + \")\";\n    var valuesList = [];\n    var x = 0;\n    for(var i=0; i<data.length; i++) {\n        var dict = data[i];\n        valuesList[x] = \"\";\n        var valArray = Object.values(dict);\n        for(var j=0; j<valArray.length; j++) {\n            valuesList[x] = valuesList[x].concat('\"' + valArray[j] + '\", ');\n        }\n        x++;\n    }\n    var valuesStr = \"\"\n    for (var i=0; i<valuesList.length; i++) {\n        var values = valuesList[i];\n        values = \"(\" + values.substring(0, values.length-2) + \")\";\n        valuesStr = valuesStr + values + \", \";\n    }\n    valuesStr = valuesStr.substring(0, valuesStr.length-2);\n    //console.log(\"INSERT INTO responses\" + keys + \" \" + \"VALUES \" + valuesStr + \";\");\n    return(\"INSERT INTO ind_diff\" + keys + \" \" + \"VALUES \" + valuesStr + \";\");\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1617830888807
  },
  "{\"sourceRoot\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21\",\"filename\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21\",\"plugins\":[],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21",
      "filename": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport path, { parse } from 'path';\nimport mysql from 'mysql';\nimport dotenv from 'dotenv';\nimport { makeQuery } from './parseData';\ndotenv.config();\nvar con = mysql.createConnection({\n  host: process.env.HOST,\n  user: process.env.DBUSER,\n  password: process.env.PASSWORD,\n  database: process.env.DATABASE\n});\ncon.connect(function (err) {\n  if (err) throw err;\n  console.log(\"Connected to database!\");\n});\nconst app = express();\napp.use(express.static('public')); // enable json message body for posting data to API\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json()); // default index route\n\napp.post('/data', (req, res) => {\n  // console.log(req.body)\n  const query = makeQuery(req.body.data);\n  con.query(query, function (err, result) {\n    if (err) console.log(err);else console.log(\"Data recorded\");\n  });\n  res.send('Data received!');\n}); // START THE SERVER\n// =============================================================================\n\nconst PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(`listening on: ${PORT}`);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImNvcnMiLCJwYXRoIiwicGFyc2UiLCJteXNxbCIsImRvdGVudiIsIm1ha2VRdWVyeSIsImNvbmZpZyIsImNvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJ1c2VyIiwiREJVU0VSIiwicGFzc3dvcmQiLCJQQVNTV09SRCIsImRhdGFiYXNlIiwiREFUQUJBU0UiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFwcCIsInVzZSIsInN0YXRpYyIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwicXVlcnkiLCJib2R5IiwiZGF0YSIsInJlc3VsdCIsInNlbmQiLCJQT1JUIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixhQUF2QjtBQUNBLE9BQU9DLElBQVAsTUFBaUIsTUFBakI7QUFDQSxPQUFPQyxJQUFQLElBQWVDLEtBQWYsUUFBNEIsTUFBNUI7QUFFQSxPQUFPQyxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixRQUFuQjtBQUNBLFNBQVFDLFNBQVIsUUFBd0IsYUFBeEI7QUFFQUQsTUFBTSxDQUFDRSxNQUFQO0FBR0EsSUFBSUMsR0FBRyxHQUFHSixLQUFLLENBQUNLLGdCQUFOLENBQXVCO0FBQzdCQyxFQUFBQSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQURXO0FBRTdCQyxFQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxNQUZXO0FBRzdCQyxFQUFBQSxRQUFRLEVBQUVMLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxRQUhPO0FBSTdCQyxFQUFBQSxRQUFRLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTztBQUpPLENBQXZCLENBQVY7QUFPRVgsR0FBRyxDQUFDWSxPQUFKLENBQVksVUFBU0MsR0FBVCxFQUFjO0FBQ3hCLE1BQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0QsQ0FIRDtBQUtBLE1BQU1DLEdBQUcsR0FBR3pCLE9BQU8sRUFBbkI7QUFFRnlCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRMUIsT0FBTyxDQUFDMkIsTUFBUixDQUFlLFFBQWYsQ0FBUixFLENBRUE7O0FBQ0FGLEdBQUcsQ0FBQ0MsR0FBSixDQUFRekIsVUFBVSxDQUFDMkIsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRekIsVUFBVSxDQUFDNkIsSUFBWCxFQUFSLEUsQ0FHQTs7QUFDQUwsR0FBRyxDQUFDTSxJQUFKLENBQVMsT0FBVCxFQUFrQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUM1QjtBQUVJLFFBQU1DLEtBQUssR0FBRzNCLFNBQVMsQ0FBQ3lCLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUFWLENBQXZCO0FBQ0EzQixFQUFBQSxHQUFHLENBQUN5QixLQUFKLENBQVVBLEtBQVYsRUFBaUIsVUFBVVosR0FBVixFQUFlZSxNQUFmLEVBQXVCO0FBQ3RDLFFBQUlmLEdBQUosRUFBU0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosRUFBVCxLQUNLQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ04sR0FIRDtBQUlKUyxFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxnQkFBVDtBQUNILENBVEQsRSxDQWNBO0FBQ0E7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHM0IsT0FBTyxDQUFDQyxHQUFSLENBQVkwQixJQUFaLElBQW9CLElBQWpDO0FBQ0FkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXRCxJQUFYO0FBQ0FoQixPQUFPLENBQUNDLEdBQVIsQ0FBYSxpQkFBZ0JlLElBQUssRUFBbEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dva3Vsc3Jpbi9EZXNrdG9wL1NjaG9vbC9QaGlsTGFiUmVzZWFyY2gvSW5kRGlmZjQuOC4yMS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IHBhdGgsIHsgcGFyc2UgfSBmcm9tICdwYXRoJztcblxuaW1wb3J0IG15c3FsIGZyb20gJ215c3FsJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52J1xuaW1wb3J0IHttYWtlUXVlcnl9IGZyb20gJy4vcGFyc2VEYXRhJ1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cblxudmFyIGNvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgIGhvc3Q6IHByb2Nlc3MuZW52LkhPU1QsXG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuREJVU0VSLFxuICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5QQVNTV09SRCxcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREFUQUJBU0VcbiAgfSk7XG4gIFxuICBjb24uY29ubmVjdChmdW5jdGlvbihlcnIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgdG8gZGF0YWJhc2UhXCIpO1xuICB9KTtcbiAgXG4gIGNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuXG4vLyBlbmFibGUganNvbiBtZXNzYWdlIGJvZHkgZm9yIHBvc3RpbmcgZGF0YSB0byBBUElcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cblxuLy8gZGVmYXVsdCBpbmRleCByb3V0ZVxuYXBwLnBvc3QoJy9kYXRhJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cocmVxLmJvZHkpXG5cbiAgICAgICAgY29uc3QgcXVlcnkgPSBtYWtlUXVlcnkocmVxLmJvZHkuZGF0YSlcbiAgICAgICAgY29uLnF1ZXJ5KHF1ZXJ5LCBmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICBpZiAoZXJyKSBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgIGVsc2UgY29uc29sZS5sb2coXCJEYXRhIHJlY29yZGVkXCIpO1xuICAgICAgICB9KTtcbiAgICByZXMuc2VuZCgnRGF0YSByZWNlaXZlZCEnKTtcbn0pO1xuXG5cblxuXG4vLyBTVEFSVCBUSEUgU0VSVkVSXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgOTA5MDtcbmFwcC5saXN0ZW4oUE9SVCk7XG5jb25zb2xlLmxvZyhgbGlzdGVuaW5nIG9uOiAke1BPUlR9YCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "cors",
        "path",
        "parse",
        "mysql",
        "dotenv",
        "makeQuery",
        "config",
        "con",
        "createConnection",
        "host",
        "process",
        "env",
        "HOST",
        "user",
        "DBUSER",
        "password",
        "PASSWORD",
        "database",
        "DATABASE",
        "connect",
        "err",
        "console",
        "log",
        "app",
        "use",
        "static",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "query",
        "body",
        "data",
        "result",
        "send",
        "PORT",
        "listen"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,IAAeC,KAAf,QAA4B,MAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEAD,MAAM,CAACE,MAAP;AAGA,IAAIC,GAAG,GAAGJ,KAAK,CAACK,gBAAN,CAAuB;AAC7BC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IADW;AAE7BC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,MAFW;AAG7BC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,QAHO;AAI7BC,EAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJO,CAAvB,CAAV;AAOEX,GAAG,CAACY,OAAJ,CAAY,UAASC,GAAT,EAAc;AACxB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,CAHD;AAKA,MAAMC,GAAG,GAAGzB,OAAO,EAAnB;AAEFyB,GAAG,CAACC,GAAJ,CAAQ1B,OAAO,CAAC2B,MAAR,CAAe,QAAf,CAAR,E,CAEA;;AACAF,GAAG,CAACC,GAAJ,CAAQzB,UAAU,CAAC2B,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQzB,UAAU,CAAC6B,IAAX,EAAR,E,CAGA;;AACAL,GAAG,CAACM,IAAJ,CAAS,OAAT,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B;AAEI,QAAMC,KAAK,GAAG3B,SAAS,CAACyB,GAAG,CAACG,IAAJ,CAASC,IAAV,CAAvB;AACA3B,EAAAA,GAAG,CAACyB,KAAJ,CAAUA,KAAV,EAAiB,UAAUZ,GAAV,EAAee,MAAf,EAAuB;AACtC,QAAIf,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAT,KACKC,OAAO,CAACC,GAAR,CAAY,eAAZ;AACN,GAHD;AAIJS,EAAAA,GAAG,CAACK,IAAJ,CAAS,gBAAT;AACH,CATD,E,CAcA;AACA;;AACA,MAAMC,IAAI,GAAG3B,OAAO,CAACC,GAAR,CAAY0B,IAAZ,IAAoB,IAAjC;AACAd,GAAG,CAACe,MAAJ,CAAWD,IAAX;AACAhB,OAAO,CAACC,GAAR,CAAa,iBAAgBe,IAAK,EAAlC",
      "sourceRoot": "/Users/gokulsrin/Desktop/School/PhilLabResearch/IndDiff4.8.21/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport path, { parse } from 'path';\n\nimport mysql from 'mysql';\nimport dotenv from 'dotenv'\nimport {makeQuery} from './parseData'\n\ndotenv.config();\n\n\nvar con = mysql.createConnection({\n    host: process.env.HOST,\n    user: process.env.DBUSER,\n    password: process.env.PASSWORD,\n    database: process.env.DATABASE\n  });\n  \n  con.connect(function(err) {\n    if (err) throw err;\n    console.log(\"Connected to database!\");\n  });\n  \n  const app = express();\n\napp.use(express.static('public'));\n\n// enable json message body for posting data to API\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n\n// default index route\napp.post('/data', (req, res) => {\n    // console.log(req.body)\n\n        const query = makeQuery(req.body.data)\n        con.query(query, function (err, result) {\n          if (err) console.log(err);\n          else console.log(\"Data recorded\");\n        });\n    res.send('Data received!');\n});\n\n\n\n\n// START THE SERVER\n// =============================================================================\nconst PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(`listening on: ${PORT}`);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1619385219581
  }
}