{
  "{\"sourceRoot\":\"/Users/janeacierno/IndDiff/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/janeacierno/IndDiff\",\"filename\":\"/Users/janeacierno/IndDiff/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/janeacierno/IndDiff\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/janeacierno/IndDiff",
      "filename": "/Users/janeacierno/IndDiff/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/janeacierno/IndDiff",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/janeacierno/IndDiff/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/janeacierno/IndDiff/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/janeacierno/IndDiff/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _path = _interopRequireWildcard(require(\"path\"));\n\nvar _mysql = _interopRequireDefault(require(\"mysql\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _parseData = require(\"./parseData\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].config();\n\nvar con = _mysql[\"default\"].createConnection({\n  host: process.env.HOST,\n  user: process.env.DBUSER,\n  password: process.env.PASSWORD,\n  database: process.env.DATABASE\n});\n\ncon.connect(function (err) {\n  if (err) throw err;\n  console.log(\"Connected to database!\");\n});\nvar app = (0, _express[\"default\"])();\napp.use(_express[\"default\"][\"static\"]('public')); // enable json message body for posting data to API\n\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: true\n}));\napp.use(_bodyParser[\"default\"].json()); // default index route\n\napp.post('/data', function (req, res) {\n  // console.log(req.body)\n  var query = (0, _parseData.makeQuery)(req.body.data);\n  con.query(query, function (err, result) {\n    if (err) console.log(err);else console.log(\"Data recorded\");\n  });\n  res.send('Data received!');\n}); // START THE SERVER\n// =============================================================================\n\nvar PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(\"listening on: \".concat(PORT));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJjb24iLCJteXNxbCIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJ1c2VyIiwiREJVU0VSIiwicGFzc3dvcmQiLCJQQVNTV09SRCIsImRhdGFiYXNlIiwiREFUQUJBU0UiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFwcCIsInVzZSIsImV4cHJlc3MiLCJib2R5UGFyc2VyIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwianNvbiIsInBvc3QiLCJyZXEiLCJyZXMiLCJxdWVyeSIsImJvZHkiLCJkYXRhIiwicmVzdWx0Iiwic2VuZCIsIlBPUlQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQUEsbUJBQU9DLE1BQVA7O0FBR0EsSUFBSUMsR0FBRyxHQUFHQyxrQkFBTUMsZ0JBQU4sQ0FBdUI7QUFDN0JDLEVBQUFBLElBQUksRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBRFc7QUFFN0JDLEVBQUFBLElBQUksRUFBRUgsT0FBTyxDQUFDQyxHQUFSLENBQVlHLE1BRlc7QUFHN0JDLEVBQUFBLFFBQVEsRUFBRUwsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFFBSE87QUFJN0JDLEVBQUFBLFFBQVEsRUFBRVAsT0FBTyxDQUFDQyxHQUFSLENBQVlPO0FBSk8sQ0FBdkIsQ0FBVjs7QUFPRVosR0FBRyxDQUFDYSxPQUFKLENBQVksVUFBU0MsR0FBVCxFQUFjO0FBQ3hCLE1BQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0QsQ0FIRDtBQUtBLElBQU1DLEdBQUcsR0FBRywwQkFBWjtBQUVGQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsOEJBQWUsUUFBZixDQUFSLEUsQ0FFQTs7QUFDQUYsR0FBRyxDQUFDQyxHQUFKLENBQVFFLHVCQUFXQyxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQUwsR0FBRyxDQUFDQyxHQUFKLENBQVFFLHVCQUFXRyxJQUFYLEVBQVIsRSxDQUdBOztBQUNBTixHQUFHLENBQUNPLElBQUosQ0FBUyxPQUFULEVBQWtCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzVCO0FBRUksTUFBTUMsS0FBSyxHQUFHLDBCQUFVRixHQUFHLENBQUNHLElBQUosQ0FBU0MsSUFBbkIsQ0FBZDtBQUNBN0IsRUFBQUEsR0FBRyxDQUFDMkIsS0FBSixDQUFVQSxLQUFWLEVBQWlCLFVBQVViLEdBQVYsRUFBZWdCLE1BQWYsRUFBdUI7QUFDdEMsUUFBSWhCLEdBQUosRUFBU0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosRUFBVCxLQUNLQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ04sR0FIRDtBQUlKVSxFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxnQkFBVDtBQUNILENBVEQsRSxDQWNBO0FBQ0E7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHNUIsT0FBTyxDQUFDQyxHQUFSLENBQVkyQixJQUFaLElBQW9CLElBQWpDO0FBQ0FmLEdBQUcsQ0FBQ2dCLE1BQUosQ0FBV0QsSUFBWDtBQUNBakIsT0FBTyxDQUFDQyxHQUFSLHlCQUE2QmdCLElBQTdCIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9qYW5lYWNpZXJuby9JbmREaWZmLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IGNvcnMgZnJvbSAnY29ycyc7XG5pbXBvcnQgcGF0aCwgeyBwYXJzZSB9IGZyb20gJ3BhdGgnO1xuXG5pbXBvcnQgbXlzcWwgZnJvbSAnbXlzcWwnO1xuaW1wb3J0IGRvdGVudiBmcm9tICdkb3RlbnYnXG5pbXBvcnQge21ha2VRdWVyeX0gZnJvbSAnLi9wYXJzZURhdGEnXG5cbmRvdGVudi5jb25maWcoKTtcblxuXG52YXIgY29uID0gbXlzcWwuY3JlYXRlQ29ubmVjdGlvbih7XG4gICAgaG9zdDogcHJvY2Vzcy5lbnYuSE9TVCxcbiAgICB1c2VyOiBwcm9jZXNzLmVudi5EQlVTRVIsXG4gICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBBU1NXT1JELFxuICAgIGRhdGFiYXNlOiBwcm9jZXNzLmVudi5EQVRBQkFTRVxuICB9KTtcbiAgXG4gIGNvbi5jb25uZWN0KGZ1bmN0aW9uKGVycikge1xuICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RlZCB0byBkYXRhYmFzZSFcIik7XG4gIH0pO1xuICBcbiAgY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSk7XG5cbi8vIGVuYWJsZSBqc29uIG1lc3NhZ2UgYm9keSBmb3IgcG9zdGluZyBkYXRhIHRvIEFQSVxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuXG4vLyBkZWZhdWx0IGluZGV4IHJvdXRlXG5hcHAucG9zdCgnL2RhdGEnLCAocmVxLCByZXMpID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZyhyZXEuYm9keSlcblxuICAgICAgICBjb25zdCBxdWVyeSA9IG1ha2VRdWVyeShyZXEuYm9keS5kYXRhKVxuICAgICAgICBjb24ucXVlcnkocXVlcnksIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAgICAgICAgIGlmIChlcnIpIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgICAgZWxzZSBjb25zb2xlLmxvZyhcIkRhdGEgcmVjb3JkZWRcIik7XG4gICAgICAgIH0pO1xuICAgIHJlcy5zZW5kKCdEYXRhIHJlY2VpdmVkIScpO1xufSk7XG5cblxuXG5cbi8vIFNUQVJUIFRIRSBTRVJWRVJcbi8vID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA5MDkwO1xuYXBwLmxpc3RlbihQT1JUKTtcbmNvbnNvbGUubG9nKGBsaXN0ZW5pbmcgb246ICR7UE9SVH1gKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "dotenv",
        "config",
        "con",
        "mysql",
        "createConnection",
        "host",
        "process",
        "env",
        "HOST",
        "user",
        "DBUSER",
        "password",
        "PASSWORD",
        "database",
        "DATABASE",
        "connect",
        "err",
        "console",
        "log",
        "app",
        "use",
        "express",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "query",
        "body",
        "data",
        "result",
        "send",
        "PORT",
        "listen"
      ],
      "mappings": ";;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;AAEAA,mBAAOC,MAAP;;AAGA,IAAIC,GAAG,GAAGC,kBAAMC,gBAAN,CAAuB;AAC7BC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IADW;AAE7BC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,MAFW;AAG7BC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,QAHO;AAI7BC,EAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJO,CAAvB,CAAV;;AAOEZ,GAAG,CAACa,OAAJ,CAAY,UAASC,GAAT,EAAc;AACxB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,CAHD;AAKA,IAAMC,GAAG,GAAG,0BAAZ;AAEFA,GAAG,CAACC,GAAJ,CAAQC,8BAAe,QAAf,CAAR,E,CAEA;;AACAF,GAAG,CAACC,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAL,GAAG,CAACC,GAAJ,CAAQE,uBAAWG,IAAX,EAAR,E,CAGA;;AACAN,GAAG,CAACO,IAAJ,CAAS,OAAT,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B;AAEI,MAAMC,KAAK,GAAG,0BAAUF,GAAG,CAACG,IAAJ,CAASC,IAAnB,CAAd;AACA7B,EAAAA,GAAG,CAAC2B,KAAJ,CAAUA,KAAV,EAAiB,UAAUb,GAAV,EAAegB,MAAf,EAAuB;AACtC,QAAIhB,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAT,KACKC,OAAO,CAACC,GAAR,CAAY,eAAZ;AACN,GAHD;AAIJU,EAAAA,GAAG,CAACK,IAAJ,CAAS,gBAAT;AACH,CATD,E,CAcA;AACA;;AACA,IAAMC,IAAI,GAAG5B,OAAO,CAACC,GAAR,CAAY2B,IAAZ,IAAoB,IAAjC;AACAf,GAAG,CAACgB,MAAJ,CAAWD,IAAX;AACAjB,OAAO,CAACC,GAAR,yBAA6BgB,IAA7B",
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport path, { parse } from 'path';\n\nimport mysql from 'mysql';\nimport dotenv from 'dotenv'\nimport {makeQuery} from './parseData'\n\ndotenv.config();\n\n\nvar con = mysql.createConnection({\n    host: process.env.HOST,\n    user: process.env.DBUSER,\n    password: process.env.PASSWORD,\n    database: process.env.DATABASE\n  });\n  \n  con.connect(function(err) {\n    if (err) throw err;\n    console.log(\"Connected to database!\");\n  });\n  \n  const app = express();\n\napp.use(express.static('public'));\n\n// enable json message body for posting data to API\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n\n// default index route\napp.post('/data', (req, res) => {\n    // console.log(req.body)\n\n        const query = makeQuery(req.body.data)\n        con.query(query, function (err, result) {\n          if (err) console.log(err);\n          else console.log(\"Data recorded\");\n        });\n    res.send('Data received!');\n});\n\n\n\n\n// START THE SERVER\n// =============================================================================\nconst PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(`listening on: ${PORT}`);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1607700042340
  },
  "{\"sourceRoot\":\"/Users/janeacierno/IndDiff/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/janeacierno/IndDiff\",\"filename\":\"/Users/janeacierno/IndDiff/parseData.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/janeacierno/IndDiff\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/janeacierno/IndDiff",
      "filename": "/Users/janeacierno/IndDiff/parseData.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/janeacierno/IndDiff",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/janeacierno/IndDiff/parseData.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/janeacierno/IndDiff/parseData.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/janeacierno/IndDiff/",
        "sourceFileName": "parseData.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeQuery = makeQuery;\n\nvar _bodyParser = require(\"body-parser\");\n\n// This file holds functions for parsing the data \nfunction reformatData(data) {\n  //in parse data...\n  var allData = [];\n  var Heinz = [\"steal the money from his work\", \"blackmail someone for the money\", \"commit credit card fraud\", \"get the medicine by stealing\", \"sell his own medication\", \"sell all his clothes for money\", \"go on strike until wages increase\", \"try random other medicines\", \"be given the medicine by a doctor\", \"inherit money from a close relative\", \"receive the money from a stranger\", \"discover a cheap new medicine\", \"sells some of his stocks or bonds\", \"use a generic medication instead\", \"buy a different insurance plan\", \"enroll in federal healthcare\", \"borrow the money from a bank\", \"be given the money by a friend\", \"loan the money from his family\", \"sell an extra car for the money\", \"be given the money by a turtle\", \"make the money time traveling\", \"grow the money on a tree\", \"get the money by clapping\"];\n  var Josh = [\"steal another person's car\", \"take a taxi without paying\", \"take another driver hostage\", \"sneak onto public transportation\", \"book a flight for next year\", \"sell car for ride to airport\", \"pay 1000 dollars for a ride\", \"try to run there in time\", \"beckon a friend passing by\", \"convince airport to delay flight\", \"get a stranger to drive him\", \"arrange for a private plane\", \"reschedule for a later flight\", \"ask the gas station clerk for help\", \"take the public bus there\", \"request aiport shuttle pickup\", \"ask a relative to pick him up\", \"hail a taxi at the intersection\", \"call a friend for a ride\", \"take public transportation\", \"get a new car by thinking\", \"ride a cat to the airport\", \"teleport himself to the airport\", \"levitate and fly to the airport\"];\n  var Brian = [\"overcharge the next customers\", \"steal money from a coworker\", \"lie about how much the bakery sold\", \"give new customers incorrect change\", \"close the store five hours early\", \"pay with his retirement fund\", \"try to invent new pastries\", \"discount food to encourage tipping\", \"find the money on the ground\", \"discover the money is in his pocket\", \"get a child to donate the money\", \"receive a 100 dollar tip\", \"explain the situation to his boss\", \"ask other employees what to do\", \"get a payday advance loan\", \"sell something he owns for money\", \"use money from his own wallet\", \"add in money from his daily tips\", \"borrow money from a friend\", \"write a check for $50.75\", \"turn the cash register invisible\", \"use some monopoly money instead\", \"take pictures of missing bills\", \"get the money by sneezing a lot\"];\n  var Mary = [\"quickly copy someone's homework\", \"put her name on a friend's homework\", \"forge an excuse note\", \"lie about being sick to go home\", \"ask her mom to FedEx the homework\", \"look under the lunchroom tables\", \"turn in a completely blank page\", \"turn in last week's homework again\", \"discover her teacher is absent\", \"learn school is canceled today\", \"remember she has an extra copy\", \"be given an A by mistake\", \"run home to get her homework\", \"bring in her homework tomorrow\", \"ask for an extra-credit assignment\", \"ask her mom what she should do\", \"explain what happened to her teacher\", \"quickly redo the homework assignment\", \"ask her mom to bring the homework\", \"have her parents call the teacher\", \"have her homework teleported\", \"remind herself yesterday evening\", \"turn in several socks instead\", \"erase the teacher's memory\"];\n  var Brad = [\"secretly take his friends' food\", \"leave the weakest people behind\", \"rob other hikers they meet\", \"kill his friend's pet dog for food\", \"go hunting for water buffalo\", \"eat random berries and leaves\", \"each venture off independently\", \"eat all their food immediately\", \"find thermal vent to keep warm\", \"find stream showing the path out\", \"meet a former expedition guide\", \"find an abandoned bear cave\", \"stay put and wait for help\", \"follow a river out of the wilderness\", \"alert rescuers with emergency flares\", \"find a river for fresh water and fish\", \"get more food by hunting and fishing\", \"build a large fire to alert rescuers\", \"create a shelter to stay warm\", \"be found by the rescue crew\", \"use his mind to keep everyone warm\", \"make new jackets from pine trees\", \"alert airplanes overhead by yelling\", \"grind up rocks for food and water\"];\n  var Liz = [\"wait to go to the gym tomorrow\", \"go for a run outside instead\", \"decide to lift weights at home\", \"eat lunch instead of working out\", \"use a friend's guest pass\", \"pay for a one-day gym pass\", \"be allowed in just this once\", \"renew her gym membership\", \"decide to never exercise again\", \"try again in three minutes\", \"complain in a foreign language\", \"run back and forth across lobby\", \"turn invisible and go in\", \"wish all gyms to be free forever\", \"renew her membership by blinking\", \"turn her hat into a gym pass\", \"take someone else's gym card\", \"claim she left her wallet inside\", \"sneak past the gym attendant\", \"go in the back door without paying\", \"learn the gym stopped checking IDs\", \"receive a free lifetime membership\", \"find a one-day pass in purse\", \"discover the gym is free today\"];\n  var demo1 = JSON.parse(data[2][\"responses\"]);\n  var demo2 = JSON.parse(data[3][\"responses\"]);\n  var vignette_trials = [26, 59, 126, 193, 260, 327];\n  var i = 5;\n  var view_time = 0;\n  var trial_vignette_order = 0;\n  var trial_vignette = \"warmup\";\n  var stim_order = 0;\n\n  while (i < 393) {\n    var trialData = {};\n    trialData.subject_id = JSON.parse(data[1][\"responses\"]).subject_id;\n    trialData.age = demo1[\"Q0\"];\n    trialData.lang = demo1[\"Q1\"];\n    trialData.nationality = demo1[\"Q2\"];\n    trialData.country = demo1[\"Q3\"];\n    trialData.gend = demo2[\"Q0\"];\n    trialData.hand = demo2[\"Q1\"];\n    trialData.education = demo2[\"Q2\"];\n    var trial = data[i];\n\n    if (i < 25) {\n      //warmup\n      trialData.vignette = trial_vignette;\n      trialData.vignette_order = trial_vignette_order;\n      trialData.vignette_view_time = view_time;\n      trialData.stimulus = trial[\"stimulus\"];\n      trialData.stimulus_order = i - 4; //trialData[key_press] = trial[key_press];\n\n      trialData.response = \"\"; //why isn't this recorded in warmup?\n\n      trialData.correct = trial.correct;\n      trialData.rt = trial[\"rt\"];\n      i = i + 1;\n    } else {\n      if (i == 25) {\n        i = i + 1;\n      }\n\n      if (vignette_trials.includes(i)) {\n        trial_vignette_order = trial_vignette_order + 1;\n        var s = data[i + 1][\"stimulus\"];\n        var v = \"\";\n\n        if (Heinz.includes(s)) {\n          v = \"Heinz\";\n        } else if (Josh.includes(s)) {\n          v = \"Josh\";\n        } else if (Brian.includes(s)) {\n          v = \"Brian\";\n        } else if (Mary.includes(s)) {\n          v = \"Mary\";\n        } else if (Brad.includes(s)) {\n          v = \"Brad\";\n        } else {\n          v = \"Liz\";\n        }\n\n        trial_vignette = data[i + 1][\"stimulus\"];\n        view_time = trial[\"rt\"];\n        i = i + 1;\n        trial = data[i];\n        stim_order = 1;\n      }\n\n      trialData.vignette = trial_vignette;\n      trialData.vignette_order = trial_vignette_order;\n      trialData.vignette_view_time = view_time;\n      trialData.stimulus = trial[\"stimulus\"];\n      trialData.stimulus_order = stim_order;\n      trialData.modal_type = trial.modal_type;\n      trialData.response = trial[\"answered\"];\n      trialData.correct = trialData.response == trialData.modal_type;\n      trialData.rt = trial[\"rt\"];\n      stim_order = stim_order + 1;\n      i = i + 2;\n    }\n\n    allData.push(trialData); //this is a list of the data from each trial, where the data recorded from each trial is:\n    //subject_id, gender, age, education, hand, vignette, vignette_order, vignette_view_time, stimulus, stimulus_order, modal_type, response, correct, rt\n  }\n\n  return allData;\n}\n\nfunction makeQuery(data) {\n  console.log(\"Parsing data\");\n  data = JSON.parse(JSON.stringify(data));\n  data = reformatData(data);\n  console.log(\"done\");\n  var keys = \"\";\n  var keyArr = Object.keys(data[0]);\n\n  for (var i = 0; i < keyArr.length; i++) {\n    keys = keys.concat(keyArr[i] + \", \");\n  }\n\n  keys = \"(\" + keys.substring(0, keys.length - 2) + \")\";\n  var valuesList = [];\n  var x = 0;\n\n  for (var i = 0; i < data.length; i++) {\n    var dict = data[i];\n    valuesList[x] = \"\";\n    var valArray = Object.values(dict);\n\n    for (var j = 0; j < valArray.length; j++) {\n      valuesList[x] = valuesList[x].concat('\"' + valArray[j] + '\", ');\n    }\n\n    x++;\n  }\n\n  var valuesStr = \"\";\n\n  for (var i = 0; i < valuesList.length; i++) {\n    var values = valuesList[i];\n    values = \"(\" + values.substring(0, values.length - 2) + \")\";\n    valuesStr = valuesStr + values + \", \";\n  }\n\n  valuesStr = valuesStr.substring(0, valuesStr.length - 2); //console.log(valuesStr);\n\n  return \"INSERT INTO responses\" + keys + \" \" + \"VALUES \" + valuesStr + \";\";\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "parseData.js"
      ],
      "names": [
        "reformatData",
        "data",
        "allData",
        "Heinz",
        "Josh",
        "Brian",
        "Mary",
        "Brad",
        "Liz",
        "demo1",
        "JSON",
        "parse",
        "demo2",
        "vignette_trials",
        "i",
        "view_time",
        "trial_vignette_order",
        "trial_vignette",
        "stim_order",
        "trialData",
        "subject_id",
        "age",
        "lang",
        "nationality",
        "country",
        "gend",
        "hand",
        "education",
        "trial",
        "vignette",
        "vignette_order",
        "vignette_view_time",
        "stimulus",
        "stimulus_order",
        "response",
        "correct",
        "rt",
        "includes",
        "s",
        "v",
        "modal_type",
        "push",
        "makeQuery",
        "console",
        "log",
        "stringify",
        "keys",
        "keyArr",
        "Object",
        "length",
        "concat",
        "substring",
        "valuesList",
        "x",
        "dict",
        "valArray",
        "values",
        "j",
        "valuesStr"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/janeacierno/IndDiff/",
      "sourcesContent": [
        "// This file holds functions for parsing the data \n\nimport { json } from \"body-parser\"\n\nfunction reformatData(data) {\n    //in parse data...\n    var allData = [];\n    var Heinz = [\"steal the money from his work\", \"blackmail someone for the money\", \"commit credit card fraud\", \"get the medicine by stealing\",\"sell his own medication\", \"sell all his clothes for money\", \"go on strike until wages increase\", \"try random other medicines\",\"be given the medicine by a doctor\", \"inherit money from a close relative\", \"receive the money from a stranger\", \"discover a cheap new medicine\",\"sells some of his stocks or bonds\", \"use a generic medication instead\", \"buy a different insurance plan\", \"enroll in federal healthcare\", \"borrow the money from a bank\", \"be given the money by a friend\", \"loan the money from his family\", \"sell an extra car for the money\",\"be given the money by a turtle\", \"make the money time traveling\", \"grow the money on a tree\", \"get the money by clapping\"];\n    var Josh = [\"steal another person's car\", \"take a taxi without paying\", \"take another driver hostage\", \"sneak onto public transportation\",\"book a flight for next year\", \"sell car for ride to airport\", \"pay 1000 dollars for a ride\", \"try to run there in time\",\"beckon a friend passing by\", \"convince airport to delay flight\", \"get a stranger to drive him\", \"arrange for a private plane\",\"reschedule for a later flight\", \"ask the gas station clerk for help\", \"take the public bus there\", \"request aiport shuttle pickup\", \"ask a relative to pick him up\", \"hail a taxi at the intersection\", \"call a friend for a ride\", \"take public transportation\",\"get a new car by thinking\", \"ride a cat to the airport\", \"teleport himself to the airport\", \"levitate and fly to the airport\"];\n    var Brian = [\"overcharge the next customers\", \"steal money from a coworker\", \"lie about how much the bakery sold\", \"give new customers incorrect change\",\"close the store five hours early\", \"pay with his retirement fund\", \"try to invent new pastries\", \"discount food to encourage tipping\",\"find the money on the ground\", \"discover the money is in his pocket\", \"get a child to donate the money\", \"receive a 100 dollar tip\",\"explain the situation to his boss\", \"ask other employees what to do\", \"get a payday advance loan\", \"sell something he owns for money\", \"use money from his own wallet\", \"add in money from his daily tips\", \"borrow money from a friend\", \"write a check for $50.75\",\"turn the cash register invisible\", \"use some monopoly money instead\", \"take pictures of missing bills\", \"get the money by sneezing a lot\"];\n    var Mary = [\"quickly copy someone's homework\", \"put her name on a friend's homework\", \"forge an excuse note\", \"lie about being sick to go home\",\"ask her mom to FedEx the homework\", \"look under the lunchroom tables\", \"turn in a completely blank page\", \"turn in last week's homework again\",\"discover her teacher is absent\", \"learn school is canceled today\", \"remember she has an extra copy\", \"be given an A by mistake\",\"run home to get her homework\", \"bring in her homework tomorrow\", \"ask for an extra-credit assignment\", \"ask her mom what she should do\", \"explain what happened to her teacher\", \"quickly redo the homework assignment\", \"ask her mom to bring the homework\", \"have her parents call the teacher\",\"have her homework teleported\", \"remind herself yesterday evening\", \"turn in several socks instead\", \"erase the teacher's memory\"];\n    var Brad = [\"secretly take his friends' food\", \"leave the weakest people behind\", \"rob other hikers they meet\", \"kill his friend's pet dog for food\",\"go hunting for water buffalo\", \"eat random berries and leaves\", \"each venture off independently\", \"eat all their food immediately\",\"find thermal vent to keep warm\", \"find stream showing the path out\", \"meet a former expedition guide\", \"find an abandoned bear cave\",\"stay put and wait for help\", \"follow a river out of the wilderness\", \"alert rescuers with emergency flares\", \"find a river for fresh water and fish\", \"get more food by hunting and fishing\", \"build a large fire to alert rescuers\", \"create a shelter to stay warm\", \"be found by the rescue crew\",\"use his mind to keep everyone warm\", \"make new jackets from pine trees\", \"alert airplanes overhead by yelling\", \"grind up rocks for food and water\"];\n    var Liz = [\"wait to go to the gym tomorrow\", \"go for a run outside instead\", \"decide to lift weights at home\", \"eat lunch instead of working out\", \"use a friend's guest pass\", \"pay for a one-day gym pass\", \"be allowed in just this once\", \"renew her gym membership\",\"decide to never exercise again\", \"try again in three minutes\", \"complain in a foreign language\", \"run back and forth across lobby\",\"turn invisible and go in\", \"wish all gyms to be free forever\", \"renew her membership by blinking\", \"turn her hat into a gym pass\",\"take someone else's gym card\", \"claim she left her wallet inside\", \"sneak past the gym attendant\", \"go in the back door without paying\",\"learn the gym stopped checking IDs\", \"receive a free lifetime membership\", \"find a one-day pass in purse\", \"discover the gym is free today\"];\n    \n\n    var demo1 = JSON.parse(data[2][\"responses\"]);\n    var demo2 = JSON.parse(data[3][\"responses\"]);\n    var vignette_trials = [26, 59, 126, 193, 260, 327];\n    var i = 5;\n    var view_time = 0;\n    var trial_vignette_order = 0;\n    var trial_vignette = \"warmup\";\n    var stim_order = 0;\n    while(i < 393) {\n        var trialData = {};\n        trialData.subject_id = JSON.parse(data[1][\"responses\"]).subject_id;\n        trialData.age = demo1[\"Q0\"];\n        trialData.lang = demo1[\"Q1\"];\n        trialData.nationality = demo1[\"Q2\"];\n        trialData.country = demo1[\"Q3\"];\n        trialData.gend = demo2[\"Q0\"];\n        trialData.hand = demo2[\"Q1\"];\n        trialData.education = demo2[\"Q2\"];\n        var trial = data[i];\n        if(i < 25) { //warmup\n            trialData.vignette = trial_vignette;\n            trialData.vignette_order = trial_vignette_order;\n            trialData.vignette_view_time = view_time;\n            trialData.stimulus = trial[\"stimulus\"];\n            trialData.stimulus_order = i-4;\n            //trialData[key_press] = trial[key_press];\n            trialData.response = \"\" //why isn't this recorded in warmup?\n            trialData.correct = trial.correct;\n            trialData.rt = trial[\"rt\"];\n            i = i+1;\n        }\n        else {\n            if(i == 25) {\n                i = i+1;\n            }\n            if(vignette_trials.includes(i)) {\n                trial_vignette_order = trial_vignette_order + 1;\n                var s = data[i+1][\"stimulus\"];\n                var v = \"\";\n\n                if (Heinz.includes(s)) {\n                    v = \"Heinz\";\n                }\n                else if (Josh.includes(s)) {\n                    v = \"Josh\";\n                }\n                else if (Brian.includes(s)) {\n                    v = \"Brian\";\n                }\n                else if (Mary.includes(s)) {\n                    v = \"Mary\";\n                }\n                else if (Brad.includes(s)) {\n                    v = \"Brad\";\n                }\n                else {\n                    v = \"Liz\";\n                }\n                trial_vignette = data[i+1][\"stimulus\"];\n                view_time = trial[\"rt\"];\n                i = i+1;\n                trial = data[i];\n                stim_order = 1;\n            }\n            trialData.vignette = trial_vignette;\n            trialData.vignette_order = trial_vignette_order;\n            trialData.vignette_view_time = view_time;\n            trialData.stimulus = trial[\"stimulus\"];\n            trialData.stimulus_order = stim_order;\n            trialData.modal_type = trial.modal_type;\n            trialData.response = trial[\"answered\"];\n            trialData.correct = trialData.response == trialData.modal_type;\n            trialData.rt = trial[\"rt\"];\n            stim_order = stim_order+1;\n            i = i+2;\n        }\n        allData.push(trialData); //this is a list of the data from each trial, where the data recorded from each trial is:\n                                    //subject_id, gender, age, education, hand, vignette, vignette_order, vignette_view_time, stimulus, stimulus_order, modal_type, response, correct, rt\n    }\n    return allData;\n}\nexport function makeQuery(data) {\n    console.log(\"Parsing data\");\n    data = JSON.parse(JSON.stringify(data));\n    data = reformatData(data);\n    console.log(\"done\");\n    var keys = \"\";\n    var keyArr = Object.keys(data[0]);\n    for(var i=0; i<keyArr.length; i++) {\n        keys = keys.concat(keyArr[i] + \", \");\n    }\n    keys = \"(\" + keys.substring(0, keys.length-2) + \")\";\n    var valuesList = [];\n    var x = 0;\n    for(var i=0; i<data.length; i++) {\n        var dict = data[i];\n        valuesList[x] = \"\";\n        var valArray = Object.values(dict);\n        for(var j=0; j<valArray.length; j++) {\n            valuesList[x] = valuesList[x].concat('\"' + valArray[j] + '\", ');\n        }\n        x++;\n    }\n    var valuesStr = \"\"\n    for (var i=0; i<valuesList.length; i++) {\n        var values = valuesList[i];\n        values = \"(\" + values.substring(0, values.length-2) + \")\";\n        valuesStr = valuesStr + values + \", \";\n    }\n    valuesStr = valuesStr.substring(0, valuesStr.length-2);\n    //console.log(valuesStr);\n    return(\"INSERT INTO responses\" + keys + \" \" + \"VALUES \" + valuesStr + \";\");\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1611862737558
  },
  "{\"sourceRoot\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences\",\"filename\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences\",\"plugins\":[],\"presets\":[]}:7.12.10:development": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences",
      "filename": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport path, { parse } from 'path';\nimport mysql from 'mysql';\nimport dotenv from 'dotenv';\nimport { makeQuery } from './parseData';\ndotenv.config();\nvar con = mysql.createConnection({\n  host: process.env.HOST,\n  user: process.env.DBUSER,\n  password: process.env.PASSWORD,\n  database: process.env.DATABASE\n});\ncon.connect(function (err) {\n  if (err) throw err;\n  console.log(\"Connected to database!\");\n});\nconst app = express();\napp.use(express.static('public')); // enable json message body for posting data to API\n\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json()); // default index route\n\napp.post('/data', (req, res) => {\n  // console.log(req.body)\n  const query = makeQuery(req.body.data);\n  con.query(query, function (err, result) {\n    if (err) console.log(err);else console.log(\"Data recorded\");\n  });\n  res.send('Data received!');\n}); // START THE SERVER\n// =============================================================================\n\nconst PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(`listening on: ${PORT}`);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImNvcnMiLCJwYXRoIiwicGFyc2UiLCJteXNxbCIsImRvdGVudiIsIm1ha2VRdWVyeSIsImNvbmZpZyIsImNvbiIsImNyZWF0ZUNvbm5lY3Rpb24iLCJob3N0IiwicHJvY2VzcyIsImVudiIsIkhPU1QiLCJ1c2VyIiwiREJVU0VSIiwicGFzc3dvcmQiLCJQQVNTV09SRCIsImRhdGFiYXNlIiwiREFUQUJBU0UiLCJjb25uZWN0IiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFwcCIsInVzZSIsInN0YXRpYyIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwicXVlcnkiLCJib2R5IiwiZGF0YSIsInJlc3VsdCIsInNlbmQiLCJQT1JUIiwibGlzdGVuIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixhQUF2QjtBQUNBLE9BQU9DLElBQVAsTUFBaUIsTUFBakI7QUFDQSxPQUFPQyxJQUFQLElBQWVDLEtBQWYsUUFBNEIsTUFBNUI7QUFFQSxPQUFPQyxLQUFQLE1BQWtCLE9BQWxCO0FBQ0EsT0FBT0MsTUFBUCxNQUFtQixRQUFuQjtBQUNBLFNBQVFDLFNBQVIsUUFBd0IsYUFBeEI7QUFFQUQsTUFBTSxDQUFDRSxNQUFQO0FBR0EsSUFBSUMsR0FBRyxHQUFHSixLQUFLLENBQUNLLGdCQUFOLENBQXVCO0FBQzdCQyxFQUFBQSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQURXO0FBRTdCQyxFQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxNQUZXO0FBRzdCQyxFQUFBQSxRQUFRLEVBQUVMLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSyxRQUhPO0FBSTdCQyxFQUFBQSxRQUFRLEVBQUVQLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTztBQUpPLENBQXZCLENBQVY7QUFPRVgsR0FBRyxDQUFDWSxPQUFKLENBQVksVUFBU0MsR0FBVCxFQUFjO0FBQ3hCLE1BQUlBLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0QsQ0FIRDtBQUtBLE1BQU1DLEdBQUcsR0FBR3pCLE9BQU8sRUFBbkI7QUFFRnlCLEdBQUcsQ0FBQ0MsR0FBSixDQUFRMUIsT0FBTyxDQUFDMkIsTUFBUixDQUFlLFFBQWYsQ0FBUixFLENBRUE7O0FBQ0FGLEdBQUcsQ0FBQ0MsR0FBSixDQUFRekIsVUFBVSxDQUFDMkIsVUFBWCxDQUFzQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUF0QixDQUFSO0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRekIsVUFBVSxDQUFDNkIsSUFBWCxFQUFSLEUsQ0FHQTs7QUFDQUwsR0FBRyxDQUFDTSxJQUFKLENBQVMsT0FBVCxFQUFrQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUM1QjtBQUVJLFFBQU1DLEtBQUssR0FBRzNCLFNBQVMsQ0FBQ3lCLEdBQUcsQ0FBQ0csSUFBSixDQUFTQyxJQUFWLENBQXZCO0FBQ0EzQixFQUFBQSxHQUFHLENBQUN5QixLQUFKLENBQVVBLEtBQVYsRUFBaUIsVUFBVVosR0FBVixFQUFlZSxNQUFmLEVBQXVCO0FBQ3RDLFFBQUlmLEdBQUosRUFBU0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEdBQVosRUFBVCxLQUNLQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxlQUFaO0FBQ04sR0FIRDtBQUlKUyxFQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxnQkFBVDtBQUNILENBVEQsRSxDQWNBO0FBQ0E7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHM0IsT0FBTyxDQUFDQyxHQUFSLENBQVkwQixJQUFaLElBQW9CLElBQWpDO0FBQ0FkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXRCxJQUFYO0FBQ0FoQixPQUFPLENBQUNDLEdBQVIsQ0FBYSxpQkFBZ0JlLElBQUssRUFBbEMiLCJzb3VyY2VSb290IjoiL1VzZXJzL2dva3Vsc3Jpbi9EZXNrdG9wL1NjaG9vbC9QaGlsTGFiUmVzZWFyY2gvRGVwcmVzc2lvblN0dWR5L0luZGl2aWR1YWxEaWZmZXJlbmNlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IHBhdGgsIHsgcGFyc2UgfSBmcm9tICdwYXRoJztcblxuaW1wb3J0IG15c3FsIGZyb20gJ215c3FsJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52J1xuaW1wb3J0IHttYWtlUXVlcnl9IGZyb20gJy4vcGFyc2VEYXRhJ1xuXG5kb3RlbnYuY29uZmlnKCk7XG5cblxudmFyIGNvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgIGhvc3Q6IHByb2Nlc3MuZW52LkhPU1QsXG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuREJVU0VSLFxuICAgIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5QQVNTV09SRCxcbiAgICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREFUQUJBU0VcbiAgfSk7XG4gIFxuICBjb24uY29ubmVjdChmdW5jdGlvbihlcnIpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgY29uc29sZS5sb2coXCJDb25uZWN0ZWQgdG8gZGF0YWJhc2UhXCIpO1xuICB9KTtcbiAgXG4gIGNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpO1xuXG4vLyBlbmFibGUganNvbiBtZXNzYWdlIGJvZHkgZm9yIHBvc3RpbmcgZGF0YSB0byBBUElcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cblxuLy8gZGVmYXVsdCBpbmRleCByb3V0ZVxuYXBwLnBvc3QoJy9kYXRhJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cocmVxLmJvZHkpXG5cbiAgICAgICAgY29uc3QgcXVlcnkgPSBtYWtlUXVlcnkocmVxLmJvZHkuZGF0YSlcbiAgICAgICAgY29uLnF1ZXJ5KHF1ZXJ5LCBmdW5jdGlvbiAoZXJyLCByZXN1bHQpIHtcbiAgICAgICAgICBpZiAoZXJyKSBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgIGVsc2UgY29uc29sZS5sb2coXCJEYXRhIHJlY29yZGVkXCIpO1xuICAgICAgICB9KTtcbiAgICByZXMuc2VuZCgnRGF0YSByZWNlaXZlZCEnKTtcbn0pO1xuXG5cblxuXG4vLyBTVEFSVCBUSEUgU0VSVkVSXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgOTA5MDtcbmFwcC5saXN0ZW4oUE9SVCk7XG5jb25zb2xlLmxvZyhgbGlzdGVuaW5nIG9uOiAke1BPUlR9YCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "cors",
        "path",
        "parse",
        "mysql",
        "dotenv",
        "makeQuery",
        "config",
        "con",
        "createConnection",
        "host",
        "process",
        "env",
        "HOST",
        "user",
        "DBUSER",
        "password",
        "PASSWORD",
        "database",
        "DATABASE",
        "connect",
        "err",
        "console",
        "log",
        "app",
        "use",
        "static",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "query",
        "body",
        "data",
        "result",
        "send",
        "PORT",
        "listen"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,IAAeC,KAAf,QAA4B,MAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEAD,MAAM,CAACE,MAAP;AAGA,IAAIC,GAAG,GAAGJ,KAAK,CAACK,gBAAN,CAAuB;AAC7BC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,IADW;AAE7BC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,MAFW;AAG7BC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,QAHO;AAI7BC,EAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJO,CAAvB,CAAV;AAOEX,GAAG,CAACY,OAAJ,CAAY,UAASC,GAAT,EAAc;AACxB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD,CAHD;AAKA,MAAMC,GAAG,GAAGzB,OAAO,EAAnB;AAEFyB,GAAG,CAACC,GAAJ,CAAQ1B,OAAO,CAAC2B,MAAR,CAAe,QAAf,CAAR,E,CAEA;;AACAF,GAAG,CAACC,GAAJ,CAAQzB,UAAU,CAAC2B,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQzB,UAAU,CAAC6B,IAAX,EAAR,E,CAGA;;AACAL,GAAG,CAACM,IAAJ,CAAS,OAAT,EAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B;AAEI,QAAMC,KAAK,GAAG3B,SAAS,CAACyB,GAAG,CAACG,IAAJ,CAASC,IAAV,CAAvB;AACA3B,EAAAA,GAAG,CAACyB,KAAJ,CAAUA,KAAV,EAAiB,UAAUZ,GAAV,EAAee,MAAf,EAAuB;AACtC,QAAIf,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAT,KACKC,OAAO,CAACC,GAAR,CAAY,eAAZ;AACN,GAHD;AAIJS,EAAAA,GAAG,CAACK,IAAJ,CAAS,gBAAT;AACH,CATD,E,CAcA;AACA;;AACA,MAAMC,IAAI,GAAG3B,OAAO,CAACC,GAAR,CAAY0B,IAAZ,IAAoB,IAAjC;AACAd,GAAG,CAACe,MAAJ,CAAWD,IAAX;AACAhB,OAAO,CAACC,GAAR,CAAa,iBAAgBe,IAAK,EAAlC",
      "sourceRoot": "/Users/gokulsrin/Desktop/School/PhilLabResearch/DepressionStudy/IndividualDifferences/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport path, { parse } from 'path';\n\nimport mysql from 'mysql';\nimport dotenv from 'dotenv'\nimport {makeQuery} from './parseData'\n\ndotenv.config();\n\n\nvar con = mysql.createConnection({\n    host: process.env.HOST,\n    user: process.env.DBUSER,\n    password: process.env.PASSWORD,\n    database: process.env.DATABASE\n  });\n  \n  con.connect(function(err) {\n    if (err) throw err;\n    console.log(\"Connected to database!\");\n  });\n  \n  const app = express();\n\napp.use(express.static('public'));\n\n// enable json message body for posting data to API\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n\n// default index route\napp.post('/data', (req, res) => {\n    // console.log(req.body)\n\n        const query = makeQuery(req.body.data)\n        con.query(query, function (err, result) {\n          if (err) console.log(err);\n          else console.log(\"Data recorded\");\n        });\n    res.send('Data received!');\n});\n\n\n\n\n// START THE SERVER\n// =============================================================================\nconst PORT = process.env.PORT || 9090;\napp.listen(PORT);\nconsole.log(`listening on: ${PORT}`);\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1607700042000
  }
}